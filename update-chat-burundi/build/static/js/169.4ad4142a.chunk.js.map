{"version":3,"file":"static/js/169.4ad4142a.chunk.js","mappings":"ySAYMA,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAO,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACxB,IAAIC,SAAQ,SAACC,GACjBC,WAAWD,EAAS,IACtB,IAAG,KAAD,SAAAJ,EAAAM,OAAA,SACKR,GAAO,wBAAAE,EAAAO,OAAA,GAAAV,EAAA,KACf,gBALcW,GAAA,OAAAf,EAAAgB,MAAA,KAAAC,UAAA,KAMTC,GAAOC,EAAAA,EAAAA,OAAK,kBAAMpB,EAAU,wEAAiB,IAE7CqB,EAAQC,EAAAA,YAAiB,SAAeC,EAAOC,GACnD,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,GAAQC,EAAAA,EAAAA,GAAA,CAACC,UAAW,EAAGJ,IAAKA,EAAKK,QAAQ,UAAaN,GAChE,IACMO,EAAQ,SAAHC,GAAqD,IAA/CC,EAAMD,EAANC,OAAQC,EAAIF,EAAJE,KAAKC,EAAQH,EAARG,SAAqBC,GAADJ,EAAVK,WAAiBL,EAANI,QAC3CE,GAAWC,EAAAA,EAAAA,MACjBC,GAAgCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA0BL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA2BT,EAAAA,EAAAA,YAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA9BE,EAAMD,EAAA,GAACE,EAASF,EAAA,GACjBG,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,KAAK,IAC1CG,GAAUF,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAME,OAAO,IAC9CC,GAAWJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMI,QAAQ,IACtDC,GAAiCpB,EAAAA,EAAAA,WAAS,GAAMqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAAzCE,EAASD,EAAA,GAACE,EAAYF,EAAA,GAC7BG,GAAwBxB,EAAAA,EAAAA,WAAS,GAAMyB,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,EAAW,WAEbC,OAAOC,YAAcC,SAASC,gBAAgBC,UAAY,EAC1DF,SAASG,iBAAiBC,aAAe,IAEzC/B,GAAY,EAEhB,EAEMgC,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJX,GAAQ,EACV,EACMY,GACJC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEzD,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAACC,MAAM,YAAYC,KAAK,QAAQC,QAASV,EAAYM,SAAC,UAG7DzD,EAAAA,EAAAA,KAAC8D,EAAAA,EAAU,CACTF,KAAK,QACL,aAAW,QACXD,MAAM,UACNE,QAASV,QAOfY,EAAAA,EAAAA,YAAU,WACR,GAAI7C,EAAU,CACZ,IAAM8C,EAAS,eAAAC,GAAAxF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuF,IAAA,OAAAxF,EAAAA,EAAAA,KAAAI,MAAA,SAAAqF,GAAA,cAAAA,EAAAnF,KAAAmF,EAAAlF,MAAA,cAAAkF,EAAAlF,KAAA,GACVmF,EAAAA,EAAAA,GAAM,CACVC,OAAQ,MACRC,IAAKC,EAAAA,EAAa,aAClBC,iBAAiB,IAEhBC,MAAK,SAAAC,GAGJ,IAHmB,IAAZC,EAAID,EAAJC,KAEDC,GAAQC,EAAAA,EAAAA,IAAWF,EAAM1C,EAAS6C,UAAW7C,EAAS8C,KAAKC,MAAM,EAAG1D,GACjE2D,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IAChCL,EAAMK,GAAGE,SAASC,UAEpBxE,EAASyE,EAAAA,EAAAA,cAAkCT,IAC3CzD,GAAY,GACZI,GAAS,SAAA+D,GAAC,OAAIA,EAAI,CAAC,GACrB,IACCC,OAAM,SAACC,GACRlD,EAAakD,EAAIC,SACjBtE,GAAY,GACZuB,GAAQ,EACR,IAAG,KAAD,mBAAAyB,EAAA7E,OAAA,GAAA4E,EAAA,KACL,kBArBc,OAAAD,EAAAzE,MAAA,KAAAC,UAAA,KAsBfuE,GACF,CACF,GAAG,CAAC9C,KACJ6C,EAAAA,EAAAA,YAAU,WAER,OADAnB,OAAO8C,iBAAiB,SAAU/C,GAC3B,kBAAMC,OAAO+C,oBAAoB,SAAUhD,EAAU,CAC9D,GAAG,IACH,IAAMiD,GAAMC,EAAAA,EAAAA,cAAY,WACrB,IAAMC,EAAK/D,EAAQgE,QAAO,SAACC,GAAI,OAAGA,EAAKjB,MAAQrE,CAAM,IACrDiB,EAAUmE,EACb,GAAE,CAAC/D,KACHgC,EAAAA,EAAAA,YAAU,WACV6B,IACAK,QAAQC,IAAIxE,EACZ,GAAE,CAACkE,IACH,IAAMO,GAAcN,EAAAA,EAAAA,cAAY,WAC9B1E,GAAY,GACZmB,GAAa,EACf,GAAE,IACF,OACEiB,EAAAA,EAAAA,MAAA,OAAK6C,UAAW3F,EAAW,WAAW,QAAQgD,SAAA,CAClC,SAATjD,KAAoB6F,EAAAA,EAAAA,IAAQzE,EAAM,KACjCA,EAAM0E,KAAI,SAACN,EAAKO,GACd,OAAOvG,EAAAA,EAAAA,KAACwG,EAAAA,SAAQ,CAAaC,UAAUzG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAY,GAAMC,KAAKC,UAAanD,UAC1EzD,EAAAA,EAAAA,KAACN,EAAI,CACHsG,KAAMA,EACN1E,MAAOA,EACPf,OAAQA,GAFSyF,EAAKjB,MAFJwB,EAMxB,IACQ,YAAT/F,KAAuB6F,EAAAA,EAAAA,IAAQzE,EAAM,KACpCA,EAAM0E,KAAI,SAACN,EAAKO,GACd,OAAOvG,EAAAA,EAAAA,KAACwG,EAAAA,SAAQ,CAAaC,UAAUzG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAY,GAAMC,KAAKC,UAAanD,SAExEuC,EAAKa,WAAa5E,EAAS8C,MAC3B/E,EAAAA,EAAAA,KAACN,EAAI,CACHsG,KAAMA,EACN1E,MAAOA,EACPf,OAAQA,GACHoG,KAAKC,WAPML,EAWxB,IACU,eAAT/F,GAAyBC,KAAa4F,EAAAA,EAAAA,IAAQzE,EAAM,KACrDA,EAAM0E,KAAI,SAACN,EAAKO,GACd,OAAOvG,EAAAA,EAAAA,KAACwG,EAAAA,SAAQ,CAAaC,UAAUzG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAY,GAAMC,KAAKC,UAAanD,SAE1EuC,EAAKa,WAAapG,IAChBT,EAAAA,EAAAA,KAACN,EAAI,CACHsG,KAAMA,EACN1E,MAAOA,EACPf,OAAQA,GACHoG,KAAKC,WAPML,EAYxB,IACY,WAAT/F,KAAuB6F,EAAAA,EAAAA,IAAQtE,EAAQ,KAAMrB,GAChDqB,EAAQuE,KAAI,SAACN,EAAKO,GAChB,OAAOvG,EAAAA,EAAAA,KAACwG,EAAAA,SAAQ,CAAaC,UAAUzG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAY,GAAMC,KAAKC,UAAanD,SAE1EuC,EAAKjB,MAAQrE,IACXV,EAAAA,EAAAA,KAACN,EAAI,CACHsG,KAAMA,EACN1E,MAAO,EACPf,OAAQA,EACRuG,OAAQtG,GACHmG,KAAKC,WARML,EAaxB,IAEAlE,IAAcrC,EAAAA,EAAAA,KAAA,OAAK+G,MAAO,CAACC,OAAO,WAAYnD,QAASsC,EAAaC,UAAU,aAAY3C,SAAEpB,IAG5FnB,IAAYlB,EAAAA,EAAAA,KAAC0G,EAAAA,EAAY,KAExB1G,EAAAA,EAAAA,KAACiH,EAAAA,EAAQ,CACVxE,KAAMA,EACNyE,iBAAkB,IAClBC,QAAShE,EACTG,OAAQA,EAAOG,UAEjBzD,EAAAA,EAAAA,KAACJ,EAAK,CAACuH,QAAShE,EAAaiE,SAAS,QAAQC,GAAI,CAAEC,MAAO,QAAS7D,SAAC,4BAM3E,EAEA,WAAe8D,EAAAA,EAAAA,MAAKlH,E,gGCpLL,SAASmH,IACtB,OACEjE,EAAAA,EAAAA,MAACkE,EAAAA,EAAK,CAACC,QAAS,EAAGL,GAAI,CAAEM,gBAAiB,qBAAsBC,OAAQ,YAAaC,QAAS,SAAUC,aAAc,QAASrE,SAAA,EAC7HzD,EAAAA,EAAAA,KAAC+H,EAAAA,EAAQ,CAAC3H,QAAQ,WAAWkH,MAAO,GAAIU,OAAQ,GAC9CX,GAAI,CAAEM,gBAAiB,yBACzB3H,EAAAA,EAAAA,KAAC+H,EAAAA,EAAQ,CAAC3H,QAAQ,OAAOiH,GAAI,CAAEY,SAAU,OAAON,gBAAiB,yBACjE3H,EAAAA,EAAAA,KAAC+H,EAAAA,EAAQ,CAAC3H,QAAQ,cAAckH,MAAO,OAAQU,OAAQ,IAAKX,GAAI,CAAEM,gBAAiB,yBACnF3H,EAAAA,EAAAA,KAAC+H,EAAAA,EAAQ,CAAC3H,QAAQ,UAAUkH,MAAO,OAAQU,OAAQ,GAAIX,GAAI,CAAEM,gBAAiB,0BAGpF,C","sources":["commponents/Posts/Posts.jsx","commponents/Skeleton/CardSkeleton.jsx"],"sourcesContent":["import React, { Suspense, lazy, useEffect, useState,useCallback,memo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { fetchAllPostsAction } from \"../../redux/slices/Posts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { isEmpty, filterpost } from \"../Utils\";\r\nimport { SERVER_URL } from \"../../Domain\";\r\nimport CardSkeleton from \"../Skeleton/CardSkeleton\";\r\nimport Button from '@mui/material/Button';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MuiAlert from '@mui/material/Alert';\r\n// import Card from \"./Card\";\r\nconst fakeDalay = async (promise) => {\r\n  await new Promise((resolve) => {\r\n    setTimeout(resolve, 3000);\r\n  });\r\n  return promise;\r\n}\r\nconst Card = lazy(() => fakeDalay(import(\"./Card\")))\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Posts = ({ socket, type,paramsId, hisprofile,postId}) => {\r\n  const dispatch = useDispatch();\r\n  const [loadPost, setLoadpost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const [result,setResutl] = useState()\r\n  const posts = useSelector((state) => state.posts);\r\n  const allpost = useSelector((state) => state.Allpost);\r\n  const userData = useSelector((state) => state.userInfo)\r\n  const [failLoded,setfailLoded] = useState(false)\r\n  const [open, setOpen] = useState(false);\r\n  const loadMore = () => {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop + 1 >\r\n      document.scrollingElement.scrollHeight - 50\r\n    ) {\r\n      setLoadpost(true);\r\n    }\r\n  };\r\n  //============================================================================/\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const action = (\r\n    <>\r\n      <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n        UNDO\r\n      </Button>\r\n      <IconButton\r\n        size=\"small\"\r\n        aria-label=\"close\"\r\n        color=\"inherit\"\r\n        onClick={handleClose}\r\n      >\r\n        \r\n      </IconButton>\r\n    </>\r\n  );\r\n  //==============================================================================\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      const fetchData = async () => {\r\n        await axios({\r\n          method: \"GET\",\r\n          url: SERVER_URL + \"/api/post/\",\r\n          withCredentials: true,\r\n        })\r\n          .then(({ data }) => {\r\n            // console.log(\"fetch again from posts\")\r\n            const Array = filterpost(data, userData.following, userData._id).slice(0, count);\r\n            for (var i = 0; i < Array.length; i++) {\r\n              Array[i].comments.reverse()\r\n            }\r\n            dispatch(fetchAllPostsAction.fetchAllPosts(Array));\r\n            setLoadpost(false);\r\n            setCount(c => c + 5);\r\n          })\r\n          .catch((err) => {\r\n          setfailLoded(err.message)\r\n          setLoadpost(false)\r\n          setOpen(true)\r\n          });\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [loadPost]);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", loadMore);\r\n    return () => window.removeEventListener(\"scroll\", loadMore);\r\n  }, [])\r\n  const fov = useCallback(()=>{\r\n     const bb = allpost.filter((post)=>post._id === postId)\r\n     setResutl(bb)\r\n  },[allpost])\r\n  useEffect(()=>{\r\n  fov()\r\n  console.log(result)\r\n  },[fov])\r\n  const refreshpost = useCallback(()=>{\r\n    setLoadpost(true)\r\n    setfailLoded(false)\r\n  },[])\r\n  return (\r\n    <div className={paramsId ? \"hisPosts\":\"feeds\"}>\r\n      {type === \"home\" && !isEmpty(posts[0]) &&\r\n        posts.map((post,index) => {\r\n          return <Suspense key={index} fallback={<CardSkeleton key={Math.random()} />}>\r\n            <Card\r\n              post={post} key={post._id}\r\n              count={count}\r\n              socket={socket}\r\n            /></Suspense>;\r\n        })}\r\n      {type === \"profile\" && !isEmpty(posts[0]) &&\r\n        posts.map((post,index) => {\r\n          return <Suspense key={index} fallback={<CardSkeleton key={Math.random()} />}>\r\n            {\r\n              post.posterId === userData._id &&\r\n              <Card\r\n                post={post} key={post._id}\r\n                count={count}\r\n                socket={socket}\r\n                key={Math.random()}\r\n              />\r\n            }\r\n          </Suspense>;\r\n        })}\r\n        {type === \"hisprofile\" && paramsId && !isEmpty(posts[0]) &&\r\n        posts.map((post,index) => {\r\n          return <Suspense key={index} fallback={<CardSkeleton key={Math.random()} />}>\r\n          {\r\n            post.posterId === paramsId &&\r\n              <Card\r\n                post={post} key={post._id}\r\n                count={count}\r\n                socket={socket}\r\n                key={Math.random()}\r\n              />            \r\n          }\r\n\r\n          </Suspense>;\r\n        })}\r\n          {type === \"single\"  && !isEmpty(allpost[0]) &&postId&&\r\n        allpost.map((post,index) => {\r\n          return <Suspense key={index} fallback={<CardSkeleton key={Math.random()} />}>\r\n          {\r\n            post._id === postId &&\r\n              <Card\r\n                post={post} \r\n                count={1}\r\n                socket={socket}\r\n                single={type}\r\n                key={Math.random()}\r\n              />            \r\n          }\r\n\r\n          </Suspense>;\r\n        })}\r\n        {\r\n        failLoded &&  <div style={{cursor:\"pointer\"}} onClick={refreshpost} className=\"cardCanvas\">{failLoded}</div>\r\n        }\r\n        {\r\n        loadPost && <CardSkeleton/>\r\n        }\r\n         <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        action={action}\r\n      >\r\n      <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n       CONNECTION WAS LOST\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Posts);\r\n","import * as React from 'react';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nexport default function Variants() {\r\n  return (\r\n    <Stack spacing={1} sx={{ backgroundColor: \"var(--color-white)\", margin: \"1rem 0rem\", padding: \"1.1rem\", borderRadius: \"10px\" }}>\r\n      <Skeleton variant=\"circular\" width={40} height={40}\r\n        sx={{ backgroundColor: \"var(--color-light)\" }} />\r\n      <Skeleton variant=\"text\" sx={{ fontSize: '1rem',backgroundColor: \"var(--color-light)\" }} />\r\n      <Skeleton variant=\"rectangular\" width={\"100%\"} height={200} sx={{ backgroundColor: \"var(--color-light)\" }} />\r\n      <Skeleton variant=\"rounded\" width={\"100%\"} height={60} sx={{ backgroundColor: \"var(--color-light)\" }} />\r\n    </Stack>\r\n  );\r\n}"],"names":["fakeDalay","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","promise","wrap","_context","prev","next","Promise","resolve","setTimeout","abrupt","stop","_x","apply","arguments","Card","lazy","Alert","React","props","ref","_jsx","MuiAlert","_objectSpread","elevation","variant","Posts","_ref2","socket","type","paramsId","postId","hisprofile","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","loadPost","setLoadpost","_useState3","_useState4","count","setCount","_useState5","_useState6","result","setResutl","posts","useSelector","state","allpost","Allpost","userData","userInfo","_useState7","_useState8","failLoded","setfailLoded","_useState9","_useState10","open","setOpen","loadMore","window","innerHeight","document","documentElement","scrollTop","scrollingElement","scrollHeight","handleClose","event","reason","action","_jsxs","_Fragment","children","Button","color","size","onClick","IconButton","useEffect","fetchData","_ref3","_callee2","_context2","axios","method","url","SERVER_URL","withCredentials","then","_ref4","data","Array","filterpost","following","_id","slice","i","length","comments","reverse","fetchAllPostsAction","c","catch","err","message","addEventListener","removeEventListener","fov","useCallback","bb","filter","post","console","log","refreshpost","className","isEmpty","map","index","Suspense","fallback","CardSkeleton","Math","random","posterId","single","style","cursor","Snackbar","autoHideDuration","onClose","severity","sx","width","memo","Variants","Stack","spacing","backgroundColor","margin","padding","borderRadius","Skeleton","height","fontSize"],"sourceRoot":""}