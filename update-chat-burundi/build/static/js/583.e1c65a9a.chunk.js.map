{"version":3,"file":"static/js/583.e1c65a9a.chunk.js","mappings":"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","sources":["commponents/Helmet/Helmet.jsx","commponents/miscellaneous/SingleChat.js","commponents/miscellaneous/ProfileModal.js","commponents/Logout.js","commponents/miscellaneous/UserListItem.js","commponents/miscellaneous/SideDrawer.js","commponents/miscellaneous/UserBadgeItem.js","commponents/miscellaneous/UpdateGroupChat.js","commponents/miscellaneous/ScrollableChat.js","commponents/miscellaneous/ChatBox.js","commponents/miscellaneous/GroupchatModal.js","commponents/miscellaneous/MyChats.js","pages/Messenger.jsx"],"sourcesContent":["import React from \"react\";\r\nconst Helmet = (props) => {\r\n  document.title = \"Chat Burundi - \" + props.title;\r\n  return <div className=\"w-100\">{props.children}</div>;\r\n};\r\nexport default Helmet;\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Text, Box } from \"@chakra-ui/layout\"\r\nimport { IconButton, FormControl } from \"@chakra-ui/react\"\r\nimport {whoSelected,isOnline,dateParser} from \"../Utils\"\r\nimport UpdateGroupChat from \"./UpdateGroupChat\"\r\nimport ProfileModal from \"./ProfileModal\"\r\nimport { useSelector } from \"react-redux\"\r\nimport ScrollableChat from \"./ScrollableChat\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport { SERVER_URL } from '../../Domain';\r\nimport { Spinner, Input, useToast,Button} from \"@chakra-ui/react\"\r\nimport {Avatar} from \"@chakra-ui/react\"\r\nimport {GetAllChat} from \"../../redux/slices/AllChat\";\r\nimport axios from \"axios\"\r\nimport {useDispatch} from \"react-redux\"\r\nvar selectedChatCompre\r\nconst SingleChat = ({ fetchAgain, setfetchAgain,socket }) => {\r\n    const [messages, setMessages] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [newmessage, setnewmessage] = useState()\r\n    const [istyping,setIstyping]=useState(false)\r\n    const [typinginfo,settypinginfo]=useState()\r\n    const dispatch = useDispatch()\r\n    const onLineusers = useSelector((state)=>state.OnlineUsers)\r\n    const toast = useToast()\r\n    const { setSelectedChat, selectedChat, user,setChats } = ChatState()\r\n    const fetchMessages = async () => {\r\n        if (!selectedChat) return;\r\n        setLoading(true)\r\n        await axios({\r\n            method: \"get\",\r\n            url: `${SERVER_URL}/api/message/${selectedChat._id}`,\r\n            withCredentials: true\r\n        })\r\n            .then(({ data }) => {\r\n                setMessages(data)\r\n                setLoading(false)\r\n\r\n                socket.emit(\"join chat\",selectedChat._id,user._id)\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false)\r\n                toast({\r\n                    title: \"error occured\",\r\n                    description: \"fail to load the messages from load messages\",\r\n                    status: \"error\",\r\n                    duration: 2000,\r\n                    isClosable: true,\r\n                    position: \"bottom-left\",\r\n                });\r\n            })\r\n    }\r\n    //updates all chats========================================================================\r\nconst fetchChats = async () => {\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${SERVER_URL}/api/chat`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data }) => {\r\n        dispatch(GetAllChat.GetAll(data))\r\n          setChats(data)\r\n        })\r\n        .catch((error) => {\r\n          toast({\r\n            title: \"something went wrang try again from fetchChats\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n  }\r\n  //==================================================================\r\n    useEffect(() => {\r\n        fetchMessages()\r\n        selectedChatCompre = selectedChat\r\n        settypinginfo({\r\n            user,\r\n            selectedChatCompre\r\n        })\r\n    }, [selectedChat])\r\n\r\n    useEffect(()=>{\r\n        socket.on(\"message received\",(data)=>{\r\n            fetchChats()\r\n             if(!selectedChatCompre || selectedChatCompre._id !== data.chat._id){\r\n\r\n                \r\n             }else{\r\n                if(data.sender._id !== user._id){\r\n                  setMessages([...messages,data])\r\n                }\r\n             }\r\n        })\r\n    })\r\n\r\n    useEffect(()=>{\r\n        socket.on(\"istyping\",(data)=>{\r\n            if(data.user._id === user._id) return\r\n            if(data.selectedChatCompre._id === selectedChatCompre?._id) {\r\n             setIstyping(true)   \r\n            } \r\n        })\r\n        socket.on(\"isnottyping\",(data)=>{\r\n          setIstyping(false)\r\n        })\r\n    })\r\n\r\n    const sendMessage = async (e) => {\r\n        if (e.key === \"Enter\" && newmessage) {\r\n            socket.emit(\"notyping\",typinginfo)\r\n            setnewmessage(\"\")\r\n            await axios({\r\n                method: \"post\",\r\n                url: `${SERVER_URL}/api/message`,\r\n                withCredentials: true,\r\n                data: {\r\n                    message: newmessage,\r\n                    chatId: selectedChat._id,\r\n                    type: \"msg\",\r\n                    incomming: false\r\n                }\r\n            })\r\n                .then(({ data }) => {\r\n                    socket.emit(\"new message\",data)\r\n                    setMessages([...messages, data])\r\n                    fetchChats()\r\n                })\r\n                .catch((error) => {\r\n                    toast({\r\n                        title: \"error occured\",\r\n                        description: \"fail to send the message\",\r\n                        status: \"error\",\r\n                        duration: 2000,\r\n                        isClosable: true,\r\n                        position: \"bottom-left\",\r\n                    });\r\n                })\r\n\r\n        }\r\n    }\r\nconst sendMessageButton = async (e) => {\r\n            setnewmessage(\"\")\r\n            socket.emit(\"notyping\",typinginfo)\r\n            await axios({\r\n                method: \"post\",\r\n                url: `${SERVER_URL}/api/message`,\r\n                withCredentials: true,\r\n                data: {\r\n                    message: newmessage,\r\n                    chatId: selectedChat._id,\r\n                    type: \"msg\",\r\n                    incomming: false\r\n                }\r\n            })\r\n                .then(({ data }) => {\r\n                    socket.emit(\"new message\",data)\r\n                    setMessages([...messages, data])\r\n                    fetchChats()\r\n                })\r\n                .catch((error) => {\r\n                    toast({\r\n                        title: \"warning\",\r\n                        description: \"can't send empty message \",\r\n                        status: \"warning\",\r\n                        duration: 2000,\r\n                        isClosable: true,\r\n                        position: \"bottom-left\",\r\n                    });\r\n                })\r\n    }\r\n    const typingHindler = (e) => {\r\n        setnewmessage(e.target.value)\r\n        //set status if user is typing\r\n        socket.emit(\"typing\",typinginfo)\r\n      //wait 3 second if user is not typing\r\n        setTimeout(() => {\r\n         socket.emit(\"notyping\",typinginfo)\r\n        }, 3000)\r\n    }\r\n    return <>\r\n        {\r\n            selectedChat ? (<>\r\n\r\n                <Text\r\n                    fontSize={{ base: \"28px\", md: \"30px\" }}\r\n                    pb={3}\r\n                    px={2}\r\n                    width=\"100%\"\r\n                    display=\"flex\"\r\n                    justifyContent={{ base: \"space-between\" }}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <IconButton\r\n                        display={{ base: \"flex\", md: \"none\" }}\r\n                        icon={<i className=\"ri ri-arrow-left-line\"></i>}\r\n                        onClick={() => setSelectedChat(\"\")}\r\n                        color=\"var(--color-name)\"\r\n                        background=\"var(--color-white)\"\r\n                        _hover={{\r\n                        background: \"var(--color-light)\",\r\n                        color: \"white\",\r\n                        cursor: \"pointer\"\r\n                  }}\r\n                    />\r\n                    {\r\n                        !selectedChat.isGroupChat ? (\r\n                            <>  \r\n                                <div style={{display:\"flex\",gap:\"1rem\"}}>\r\n                                <Avatar src={whoSelected(user?._id, selectedChat?.users).picture}/>\r\n                                <div>\r\n                                <Text fontSize=\"1rem\" color=\"var(--color-name)\">{whoSelected(user?._id, selectedChat?.users).pseudo}</Text>\r\n                                {isOnline(whoSelected(user?._id, selectedChat?.users)._id,onLineusers) && !istyping && <Text fontSize=\"0.7rem\" color=\"var(--color-name)\">Online</Text>}\r\n                                {istyping && <Text fontSize=\"0.7rem\" color=\"blue\">Typing...</Text>}\r\n                                {!istyping && !isOnline(whoSelected(user?._id, selectedChat?.users)._id,onLineusers) && <Text fontSize=\"0.7rem\" color=\"var(--color-name)\">{dateParser(selectedChat?.updatedAt)}</Text>}\r\n                                </div>\r\n                                </div>\r\n                                <ProfileModal user={whoSelected(user?._id, selectedChat?.users)} />\r\n                            </>\r\n                        ) :\r\n                            (<>\r\n                                {selectedChat.chatName.toUpperCase()}\r\n                                {\r\n                                    <UpdateGroupChat\r\n                                        fetchAgain={fetchAgain}\r\n                                        setfetchAgain={setfetchAgain}\r\n                                        fetchMessages={fetchMessages}\r\n                                    />\r\n                                }\r\n\r\n                            </>)\r\n                    }\r\n                </Text>\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                    justifyContent=\"flex-end\"\r\n                    padding={3}\r\n                    background=\"var(--color-light)\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    overflowY=\"hidden\"\r\n                >\r\n                    {\r\n                        loading ? <Spinner\r\n                            size={\"xl\"}\r\n                            alignSelf=\"center\"\r\n                            h={20}\r\n                            w={20}\r\n                            margin=\"auto\"\r\n                        /> :\r\n                            (\r\n                                <div className=\"messagesbody\">\r\n                                    <ScrollableChat messages={messages}/>\r\n                                </div>\r\n                            )\r\n                    }\r\n                    { !loading &&\r\n                    <FormControl onKeyDown={sendMessage} isRequired mt={3} display=\"flex\" gap={2}>\r\n                        <Input variant=\"filled\"\r\n                         background=\"var(--color-white)\"\r\n                         id=\"input\"\r\n                          placeholder=\"enter a message .... \" \r\n                          onChange={typingHindler} \r\n                          value={newmessage}\r\n                          color=\"var(--color-name)\"\r\n                          _hover={{\r\n                           background: \"var(--color-white)\",\r\n                           color:\"var(--color-name)\",\r\n                           \r\n                               }} \r\n                        />\r\n                        <Button colorScheme=\"blue\" onClick={()=> sendMessageButton()}>Send</Button>\r\n                    </FormControl>\r\n                }\r\n                </Box>\r\n            </>)\r\n                :\r\n                (<Box\r\n                    height=\"100%\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Text fontSize=\"2xl\" pb={3}>select chat to start chatting</Text>\r\n                </Box>)\r\n        }\r\n    </>\r\n}\r\n\r\nexport default SingleChat;","import React from \"react\"\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { IconButton } from \"@chakra-ui/button\"\r\nimport { Text } from \"@chakra-ui/layout\"\r\nimport { Modal, ModalOverlay, ModalBody, ModalHeader, ModalContent, ModalCloseButton, ModalFooter, Image } from '@chakra-ui/react'\r\nconst ProfileModal = ({ user, children }) => {\r\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\r\n\treturn (\r\n\t\t<>{\r\n\t\t\tchildren ? (\r\n\t\t\t\t<span onClick={onOpen}>{children}</span>\r\n\t\t\t) : (\r\n\t\t\t\t<IconButton \r\n\t\t\t\tbackground=\"var(--color-white)\"\r\n\t\t\t\tcolor=\"var(--color-name)\"\r\n\t\t\t\t     _hover={{\r\n                    background: \"var(--color-light)\",\r\n                    color: \"white\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n\t\t\t\td={{ base: \"flex\" }} icon={<i className=\"ri-eye-line\" />} onClick={onOpen} />\r\n\t\t\t)}\r\n\t\t\t<Modal size=\"lg\" isOpen={isOpen} onClose={onClose} isCentered>\r\n\t\t\t\t<ModalOverlay />\r\n\t\t\t\t<ModalContent\r\n\t\t\t\tbackground=\"var(--color-white)\"\r\n\t\t\t\tcolor=\"var(--color-name)\"\r\n\t\t\t\t height=\"410px\">\r\n\t\t\t\t\t<ModalHeader\r\n\t\t\t\t\t\tsx={{ display: \"flex\", justifyContent: \"center\", fontSize: \"40px\", fontFamily: \"Work sans\" }}\r\n\t\t\t\t\t>{user.pseudo}</ModalHeader>\r\n\t\t\t\t\t<ModalCloseButton />\r\n\t\t\t\t\t<ModalBody\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\tflexDirection=\"column\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tborderRadius=\"full\"\r\n\t\t\t\t\t\t\tboxSize=\"150px\"\r\n\t\t\t\t\t\t\tsrc={user.picture}\r\n\t\t\t\t\t\t\talt={user.pseudo}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Text fontSize={{ base: \"1.5rem\", md: \"2rem\" }}>Email : {user.email}</Text>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</ModalContent>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ProfileModal;","\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { SERVER_URL } from '../Domain';\r\nconst Logout = () => {\r\nconst removeCookie = (key)=>{\r\n    if(window !== \"undefined\"){\r\n        Cookies.remove(key,{expires:1})\r\n    }\r\n\r\n}\r\n\r\n    const logout = async () => {\r\n        await axios({\r\n            method:\"get\",\r\n            url: `${SERVER_URL}/api/user/logout`,\r\n            withCredentials: true,\r\n        })\r\n        .then(()=>{\r\n            removeCookie(\"jwt\")\r\n            localStorage.removeItem(\"token\")\r\n            window.location.reload()\r\n        })\r\n        .catch((err)=>console.log(err))\r\n    }\r\n    logout();\r\n}\r\nexport default Logout;","import React from \"react\"\r\nimport { Box, Avatar, Text } from \"@chakra-ui/react\"\r\nconst UserListItem = ({ handleFunction, user }) => {\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      background=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38b2ac\",\r\n        color: \"white\",\r\n        cursor: \"pointer\"\r\n      }}\r\n      width=\"100%\"\r\n      alignItems=\"center\"\r\n      display=\"flex\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={3}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.pseudo}\r\n        src={user.picture}\r\n      />\r\n      <Box>\r\n        <Text>{user.pseudo}</Text>\r\n        <Text fontSize=\"xs\"> <b>Email :</b> {user.email}</Text>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default UserListItem;","import React, { useState } from \"react\"\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport axios from \"axios\"\r\nimport { Spinner } from \"@chakra-ui/spinner\"\r\nimport {\r\n  Tooltip,\r\n  Menu, MenuButton, Avatar,\r\n  MenuList, MenuItem, Drawer,\r\n  DrawerOverlay, DrawerContent,\r\n  DrawerHeader,\r\n  DrawerBody,\r\n  useToast,\r\n  Input,\r\n} from '@chakra-ui/react'\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport Logout from \"../Logout\"\r\nimport ChatLoading from \"./ChatLoading\"\r\nimport UserListItem from \"./UserListItem\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport { SERVER_URL } from '../../Domain';\r\nconst SideDrawer = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const [search, setSearch] = useState(\"\")\r\n  const [searchResult, setSearchResult] = useState([])\r\n  const [loading, setloading] = useState(false)\r\n  const [loadingChat, setloadingChat] = useState()\r\n  const { user, setSelectedChat, chats, setChats } = ChatState()\r\n  const toast = useToast()\r\n  const accessChat = async (userId) => {\r\n    try {\r\n      setloadingChat(true)\r\n      await axios({\r\n        method: \"post\",\r\n        url: `${SERVER_URL}/api/chat`,\r\n        withCredentials: true,\r\n        data: { userId: userId }\r\n      })\r\n        .then(({ data }) => {\r\n          if (!chats.find((chat) => chat._id === data._id)) setChats([data, ...chats])\r\n          setSelectedChat(data)\r\n          setloadingChat(false)\r\n          onClose()\r\n        })\r\n        .catch((error) => {\r\n          setloadingChat(false)\r\n          toast({\r\n            title: \"something went wrang try again\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  //search user to chat\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please enter something to search\",\r\n        status: \"warning\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      setloading(true)\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${SERVER_URL}/api/user/search/user?search=${search}`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data }) => {\r\n          setloading(false)\r\n          const dataFilted = data.filter((usersearch) => usersearch.followers?.includes(user._id))\r\n          setSearchResult(dataFilted)\r\n          console.log(dataFilted)\r\n        })\r\n        .catch((error) => {\r\n          setloading(false)\r\n          toast({\r\n            title: \"something went wrang try again\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n          // navigate(\"/login\")\r\n        })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  return <>\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        padding: \" 5px 10px 5px 10px\",\r\n        background: \"var(--color-white)\",\r\n\r\n      }}\r\n    >\r\n      <Tooltip hasArrow label='Search user to chat' bg='var(--color-white)' color=\"var(--color-name)\">\r\n        <Button \r\n        _hover={{\r\n        background: \"var(--color-white)\",\r\n        color: \"white\",\r\n        cursor: \"pointer\"\r\n                  }}\r\n        variant=\"ghost\" onClick={onOpen}>\r\n          <i className=\"ri ri-search-line\" style={{color:\"var(--color-name)\"}}></i>\r\n          <Text display={{ base: \"none\", md: \"flex\" }} px=\"4\" color=\"var(--color-name)\">Search User</Text>\r\n        </Button>\r\n      </Tooltip>\r\n      <Text fontSize=\"2xl\" color=\"var(--color-name)\">Chat burundi</Text>\r\n      <div>\r\n        <Menu>\r\n          <MenuButton\r\n          _hover={{\r\n           background: \"var(--color-light)\",\r\n           color: \"white\",\r\n           cursor: \"pointer\"\r\n            }}\r\n           bg='var(--color-white)' as={Button} rightIcon={<i className=\"ri-arrow-drop-down-line\"></i>}>\r\n            <Avatar size=\"sm\" name={user.pseudo} src={user.picture} />\r\n          </MenuButton>\r\n          <MenuList>\r\n            <ProfileModal user={user}>\r\n              <MenuItem>profile</MenuItem>\r\n            </ProfileModal>\r\n            <MenuItem onClick={() => Logout()}>Logout</MenuItem>\r\n          </MenuList>\r\n        </Menu>\r\n      </div>\r\n    </Box>\r\n    <Drawer \r\n    placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n      <DrawerOverlay />\r\n      <DrawerContent>\r\n        <DrawerHeader borderBottomWidth=\"1px\"> Search users</DrawerHeader>\r\n        <DrawerBody>\r\n          <Box \r\n          display=\"flex\" paddingBottom={2}>\r\n            <Input\r\n              placeholder=\"Search by email or usename\"\r\n              mr={2}\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n            <Button onClick={handleSearch}>Go</Button>\r\n          </Box>\r\n          {\r\n            loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                  user={user}\r\n                />\r\n              ))\r\n            )\r\n          }\r\n          {\r\n            loadingChat && <Spinner ml='auto' d='flex' />\r\n          }\r\n        </DrawerBody>\r\n      </DrawerContent>\r\n    </Drawer>\r\n  </>\r\n}\r\n\r\nexport default SideDrawer;","import React from \"react\"\r\nimport { Box } from \"@chakra-ui/layout\"\r\nimport { Avatar } from \"@chakra-ui/react\"\r\nconst UserBadgeItem = ({ user, handleFunction }) => {\r\n  return <Box\r\n    px={2}\r\n    py={1}\r\n    m={1}\r\n    mb={2}\r\n    variant=\"solid\"\r\n    display=\"flex\"\r\n    fontSize={12}\r\n    cursor=\"pointer\"\r\n    onClick={handleFunction}\r\n\r\n  >\r\n    <Avatar src={user.picture} size=\"sm\" />\r\n    <i className=\"ri ri-close-line\" onClick={handleFunction}></i>\r\n  </Box>\r\n}\r\n\r\nexport default UserBadgeItem;","import React, { useState } from \"react\"\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { IconButton } from \"@chakra-ui/button\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport UserBadgeItem from \"./UserBadgeItem\"\r\nimport { Spinner } from \"@chakra-ui/spinner\"\r\nimport axios from \"axios\"\r\nimport UserListItem from \"./UserListItem\"\r\nimport { SERVER_URL } from '../../Domain';\r\nimport {\r\n  Modal, ModalOverlay, ModalBody, ModalHeader, ModalContent,\r\n  ModalCloseButton, ModalFooter, Button, useToast, Box, FormControl, Input\r\n} from '@chakra-ui/react'\r\nconst UpdateGroupChat = ({ fetchAgain, setfetchAgain,fetchMessages }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const { setSelectedChat, selectedChat, user } = ChatState()\r\n  const [search, setSearch] = useState(\"\")\r\n  const [searchResult, setSearchResult] = useState([])\r\n  const [loading, setloading] = useState(false)\r\n  const [groupName, setgroupName] = useState()\r\n  const [renamelaoding, setrenamelaoding] = useState(false)\r\n  const toast = useToast()\r\n  const handleRemove = async (userToremove) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && userToremove._id !== user._id) {\r\n      toast({\r\n        title: \"only admin can remove sommeone\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\"\r\n      })\r\n      return\r\n    }\r\n    setloading(true)\r\n    await axios({\r\n      method: \"put\",\r\n      url: `${SERVER_URL}/api/chat/groupremove`,\r\n      withCredentials: true,\r\n      data: {\r\n        chatId: selectedChat._id,\r\n        userId: userToremove._id\r\n      }\r\n    }).then(({ data }) => {\r\n      console.log(data)\r\n      userToremove._id === user._id ? setSelectedChat() : setSelectedChat(data)\r\n      fetchMessages()\r\n      setfetchAgain(!fetchAgain)\r\n      setloading(false)\r\n      toast({\r\n        title: \"add removed successifull\",\r\n        status: \"success\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }).catch((error) => {\r\n      console.log(error)\r\n      toast({\r\n        title: \"something went wrong try again\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    })\r\n    setloading(false)\r\n  }\r\n  const handleGroup = async (userToAdd) => {\r\n    if (selectedChat.users.find((u) => u._id === userToAdd._id)) {\r\n      toast({\r\n        title: `${userToAdd.pseudo} has already in group`,\r\n        status: \"warning\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      return\r\n    }\r\n    setloading(true)\r\n    await axios({\r\n      method: \"put\",\r\n      url: `${SERVER_URL}/api/chat/addTogroup`,\r\n      withCredentials: true,\r\n      data: {\r\n        chatId: selectedChat._id,\r\n        userId: userToAdd._id\r\n      }\r\n    }).then(({ data }) => {\r\n      setSelectedChat(data)\r\n      setfetchAgain(!fetchAgain)\r\n      setloading(false)\r\n      toast({\r\n        title: \"add user successifull\",\r\n        status: \"success\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }).catch((error) => {\r\n      setloading(false)\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    })\r\n\r\n  }\r\n  //==============================================================================================================\r\n  const hamdleRename = async () => {\r\n    if (!groupName || groupName === \" \") return\r\n    try {\r\n      setrenamelaoding(true)\r\n      await axios({\r\n        method: \"put\",\r\n        url: `${SERVER_URL}/api/chat/rename`,\r\n        withCredentials: true,\r\n        data: {\r\n          chatId: selectedChat._id,\r\n          chatName: groupName\r\n        }\r\n      })\r\n        .then(({ data }) => {\r\n          setSelectedChat(data)\r\n          setfetchAgain(!fetchAgain)\r\n          setrenamelaoding(false)\r\n          setgroupName(\"\")\r\n        })\r\n        .catch((error) => {\r\n          setrenamelaoding(false)\r\n          toast({\r\n            title: \"error occured\",\r\n            description: error.response.data.message,\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  const handleSearch = async (query) => {\r\n    setSearch(query)\r\n    if (!query) return\r\n    setloading(true)\r\n    try {\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${SERVER_URL}/api/user/search/user?search=${search}`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data }) => {\r\n          setloading(false)\r\n          const dataFilted = data.filter((usersearch) => usersearch.following?.includes(user._id))\r\n          setSearchResult(dataFilted)\r\n        })\r\n        .catch((error) => {\r\n          setloading(false)\r\n          toast({\r\n            title: \"error occured\",\r\n            description: \"error to load the search results\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <IconButton d={{ base: \"flex\" }} icon={<i className=\"ri-eye-line\" />} onClick={onOpen} />\r\n    <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader\r\n          sx={{ display: \"flex\", justifyContent: \"center\", fontSize: \"20px\" }}\r\n        >{selectedChat.chatName}</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <Box display=\"flex\" flexWrap=\"wrap\" width=\"100%\">\r\n            {\r\n              selectedChat.users.map((user) => (\r\n                <UserBadgeItem key={user._id} user={user} handleFunction={() => handleRemove(user)} />\r\n              )\r\n              )\r\n            }\r\n          </Box>\r\n          <>\r\n            {\r\n              user._id === selectedChat.groupAdmin._id &&\r\n              <>\r\n                <FormControl display=\"flex\">\r\n                  <Input placeholder=\"chat Name\" mb={1}\r\n                    onChange={(e) => setgroupName(e.target.value)}\r\n                  />\r\n                  <Button variant=\"solid\"\r\n                    ml={1} isLoading={renamelaoding}\r\n                    onClick={hamdleRename}\r\n                    colorScheme=\"blue\"\r\n                  >update</Button>\r\n                </FormControl>\r\n                <FormControl d=\"flex\">\r\n                  <Input placeholder=\"add a user to group\" mb={1}\r\n                    onChange={(e) => handleSearch(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </>\r\n            }\r\n          </>\r\n          {\r\n            loading ? (<Spinner size=\"lg\" />) :\r\n\r\n              (\r\n                searchResult?.slice(0, 3).map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    handleFunction={() => handleGroup(user)}\r\n                    user={user}\r\n                  />\r\n                ))\r\n              )\r\n          }\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button colorScheme=\"red\" mr={3} onClick={() => handleRemove(user)}>leave group</Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  </>\r\n}\r\nexport default UpdateGroupChat;","import React from \"react\";\r\nimport ScrollableFeed from \"react-scrollable-feed\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport {isSameSender, isLastMessage,isSameSenderMargin,isSameUser} from \"../Utils\"\r\nimport {Tooltip} from \"@chakra-ui/react\"\r\nimport {Avatar} from \"@chakra-ui/avatar\"\r\nconst ScrollableChat = ({messages}) => {\r\n    const { user } = ChatState()\r\n    return (\r\n        <ScrollableFeed className=\"messagesbody\">\r\n        {\r\n         messages && messages.map((message,index)=>(\r\n        <div style={{display:\"flex\"}} key={message._id}>\r\n            {\r\n                (isSameSender(messages,message,index,user._id)\r\n\r\n               || isLastMessage(messages,index,user._id)\r\n            )&& (\r\n              <Tooltip\r\n              label={message.sender.pseudo}\r\n              hasArrow\r\n              >\r\n              <Avatar\r\n            marginTop=\"7px\"\r\n            marginRight={1}\r\n            size=\"sm\"\r\n            cursor=\"pointer\"\r\n            name={\"message.sender.name\"}\r\n            src={message.sender.picture}\r\n              />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n            style={{\r\n                backgroundColor : `${\r\n                    message.sender._id === user._id ? \"var(--color-white)\":\"#B9F5D0\"\r\n                }`,\r\n                borderRadius:\"10px\",\r\n                padding:\"5px 15px\",\r\n                maxWidth:\"75%\",\r\n                minWidth:\"60px\",\r\n                marginLeft:isSameSenderMargin(messages,message,index,user._id),\r\n                marginTop:isSameUser(messages,message,index,user._id) ? 3 : 10,\r\n                color:`${\r\n                    message.sender._id === user._id ? \"var(--color-name)\":\"black\"\r\n                }`,\r\n            }}\r\n            >{message.message}</span>\r\n        </div>\r\n                ))\r\n        }\r\n        </ScrollableFeed>\r\n    )\r\n}\r\nexport default ScrollableChat;","import React from \"react\"\r\nimport { Box } from \"@chakra-ui/react\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport SingleChat from \"./SingleChat\"\r\nconst ChatBox = ({ fetchAgain, setfetchAgain,socket }) => {\r\n    const { selectedChat } = ChatState()\r\n    return <Box\r\n        display={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n        alignItems=\"center\"\r\n        flexDirection=\"column\"\r\n        p={3}\r\n        background=\"var(--color-white)\"\r\n        width={{ base: \"100%\", md: \"68%\" }}\r\n    >\r\n        <SingleChat fetchAgain={fetchAgain} setfetchAgain={setfetchAgain} socket={socket}/>\r\n    </Box>\r\n}\r\n\r\nexport default ChatBox;","import React, { useState } from \"react\"\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { SERVER_URL } from '../../Domain';\r\nimport axios from \"axios\"\r\nimport UserListItem from \"./UserListItem\"\r\nimport UserBadgeItem from \"./UserBadgeItem\"\r\nimport {\r\n  Modal,\r\n  ModalOverlay, ModalBody, ModalHeader, ModalContent,\r\n  ModalCloseButton, ModalFooter,\r\n  Button, useToast, Input, Box\r\n} from '@chakra-ui/react'\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport { FormControl } from \"@chakra-ui/form-control\"\r\nconst GroupchatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const [groupchatName, setgroupchatName] = useState()\r\n  const [selectedUsers, setselectedUsers] = useState([])\r\n  const [search, setSearch] = useState(\"\")\r\n  const [searchResult, setSearchResult] = useState([])\r\n  const [loading, setloading] = useState(false)\r\n  const toast = useToast()\r\n  const { user, chats, setChats } = ChatState()\r\n  const handleSearch = async (query) => {\r\n    setSearch(query)\r\n    if (!query) return\r\n    setloading(true)\r\n    try {\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${SERVER_URL}/api/user/search/user?search=${search}`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data }) => {\r\n          setloading(false)\r\n          const dataFilted = data.filter((usersearch) => usersearch.following?.includes(user._id))\r\n          setSearchResult(dataFilted)\r\n        })\r\n        .catch((error) => {\r\n          setloading(false)\r\n          toast({\r\n            title: \"error occured\",\r\n            description: \"error to load the search results\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  const handleSubmit = async () => {\r\n    if (!groupchatName || selectedUsers.length === 0) {\r\n      toast({\r\n        title: `Please fill all the filds `,\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      return\r\n    }\r\n    try {\r\n      await axios({\r\n        method: \"post\",\r\n        url: `${SERVER_URL}/api/chat/group`,\r\n        withCredentials: true,\r\n        data: {\r\n          name: groupchatName,\r\n          users: selectedUsers\r\n        }\r\n      })\r\n        .then(({ data }) => {\r\n          setChats([data, ...chats])\r\n          toast({\r\n            title: \"Alert\",\r\n            description: \"group create successfully \",\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n          onClose()\r\n        })\r\n        .catch(({ response }) => {\r\n          toast({\r\n            title: \"error while creating group\",\r\n            description: response.data,\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  const handleDelete = (userToremove) => {\r\n    //  \ttoast({\r\n    //   title:`${userToremove.pseudo} removed `,\r\n    //   status:\"success\",\r\n    //   duration:5000,\r\n    //   isClosable:true,\r\n    //   position:\"bottom-left\",\r\n    // });\r\n    setselectedUsers(selectedUsers.filter((user) => user._id !== userToremove._id))\r\n  }\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: `${userToAdd.pseudo} has already added`,\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      return\r\n    }\r\n    setselectedUsers([...selectedUsers, userToAdd])\r\n    toast({\r\n      title: `${userToAdd.pseudo} added`,\r\n      status: \"success\",\r\n      duration: 5000,\r\n      isClosable: true,\r\n      position: \"bottom-left\",\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            sx={{ display: \"flex\", justifyContent: \"center\", fontSize: \"35px\" }}\r\n          >create groupe chat</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n          >\r\n            <FormControl>\r\n              <Input placeholder=\"Groupe name\" mb={3}\r\n                onChange={(e) => setgroupchatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input placeholder=\"users ex. janeiro ,mama,papa\" mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box display=\"flex\" flexWrap=\"wrap\" width=\"100%\">\r\n              {selectedUsers.map((user) => (\r\n                <UserBadgeItem key={user._id} user={user} handleFunction={() => handleDelete(user)} />\r\n              ))}\r\n            </Box>\r\n\r\n            {\r\n              loading ? (<div>Loading .... </div>) :\r\n\r\n                (\r\n                  searchResult?.slice(0, 4).map((user) => (\r\n                    <UserListItem\r\n                      key={user._id}\r\n                      handleFunction={() => handleGroup(user)}\r\n                      user={user}\r\n                    />\r\n                  ))\r\n                )\r\n            }\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={handleSubmit}>Create Chat</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GroupchatModal;","import React, { useState, useEffect } from \"react\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport { useToast, Button, Text, Stack, Avatar,AvatarBadge} from \"@chakra-ui/react\"\r\nimport { Box } from \"@chakra-ui/layout\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { SERVER_URL } from '../../Domain';\r\nimport ChatLoading from \"./ChatLoading\"\r\nimport GroupchatModal from \"./GroupchatModal\"\r\nimport axios from \"axios\"\r\nimport { whoSelected,LongMessage,isOnline,dateParser } from \"../Utils\"\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const userInfo = useSelector((state) => state.userInfo)\r\n  const [loggedUser, setLogedUser] = useState()\r\n  const { setSelectedChat, chats, setChats, selectedChat } = ChatState()\r\n    const onLineusers = useSelector((state)=>state.OnlineUsers)\r\n  const toast = useToast()\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${SERVER_URL}/api/chat`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data }) => {\r\n          setChats(data)\r\n        })\r\n        .catch((error) => {\r\n          toast({\r\n            title: \"something went wrang try again from my chats\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setLogedUser(userInfo)\r\n    fetchChats()\r\n  }, [fetchAgain])\r\n  return <Box\r\n    display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n    flexDirection=\"column\"\r\n    alignItems=\"center\"\r\n    paddind={3}\r\n    background=\"var(--color-white)\"\r\n    width={{ base: \"100%\", md: \"31%\" }}\r\n    overflowY=\"hidden\"\r\n  >\r\n    <Box\r\n      px={3}\r\n      pb={2}\r\n      fontSize={{ base: \"20px\", md: \"25px\" }}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      color=\"var(--color-name)\"\r\n      borderBottom=\"1px solid var(--color-light)\"\r\n      >\r\n      Chats\r\n      <GroupchatModal>\r\n        <Button\r\n          h=\"1.5rem\"\r\n          width=\"0.5rem\"\r\n          fontSize={{ base: \"1rem\", md: \"1rem\", lg: \"1rem\" }}\r\n          background=\"var(--color-light)\"\r\n          _hover={{\r\n          background: \"var(--color-primary)\",\r\n          color: \"white\",\r\n          cursor: \"pointer\"\r\n          }}\r\n        ><i className=\"ri ri-add-line\"></i></Button>\r\n      </GroupchatModal>\r\n    </Box>\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      paddind={3}\r\n      width=\"100%\"\r\n      height=\"90%\"\r\n      borderRadius=\"lg\"\r\n      overflowY=\"hidden\"\r\n    >\r\n      {\r\n        chats ? (\r\n          <Stack\r\n            overflowY=\"scroll\"\r\n            className=\"MyChats\"\r\n            padding=\"5px\"\r\n          >\r\n            {\r\n              chats.map((chat) => (\r\n                <Box\r\n                  onClick={() => setSelectedChat(chat)}\r\n                  _hover={{\r\n                    background: \"var(--color-primary)\",\r\n                    color: \"white\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                  width=\"100%\"\r\n                  key={chat._id}\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  color={selectedChat === chat ? \"white\" : \"var(--color-name)\"}\r\n                  background={selectedChat === chat ? \"#38b2ac\" : \"var(--color-light)\"}\r\n                  px={3}\r\n                  py={2}\r\n                  mb={3}\r\n                  borderRadius=\"lg\"\r\n                >\r\n                  <Avatar\r\n                    mr={2}\r\n                    size=\"md\"\r\n                    cursor=\"pointer\"\r\n                    name={!chat.isGroupChat ? whoSelected(loggedUser?._id, chat?.users).pseudo : chat.chatName}\r\n                    src={!chat.isGroupChat ? whoSelected(loggedUser?._id, chat?.users).picture : \" \"}\r\n                  ><AvatarBadge boxSize={!chat.isGroupChat &&\r\n                  isOnline(whoSelected(loggedUser?._id, chat?.users)._id,onLineusers) ? \"1rem\":\"0rem\"} bg=\"green.500\"/>\r\n                  </Avatar>\r\n                  <Box width=\"100%\">\r\n                  <Box\r\n                  sx={{display:\"flex\",\r\n                       alignItems:\"center\",\r\n                       justifyContent:\"space-between\",\r\n                       width:\"100%\"\r\n                      }}\r\n                  >\r\n                    <Text sx={{\r\n                      fontWeight:\"bold\",\r\n                      color:\"var(--color-name)\"\r\n                    }}>\r\n                      {\r\n                        !chat.isGroupChat ? (\r\n                          whoSelected(loggedUser?._id, chat?.users).pseudo\r\n                        ) : (chat.chatName)\r\n                      }\r\n                    </Text>\r\n                    <span style={{fontSize:\"0.8rem\"}}>{dateParser(chat.latestMessage?.updatedAt)}</span>\r\n                    </Box>\r\n                    <Box\r\n                    display=\"flex\"\r\n                    fontSize=\"sm\"\r\n                    gap={1}\r\n                    >\r\n                      <Text>{chat.latestMessage?.sender.pseudo === userInfo.pseudo ? \"You\": chat.latestMessage?.sender.pseudo}</Text>\r\n                      :\r\n                      <Text>{LongMessage(chat.latestMessage?.message)}</Text>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              ))\r\n            }\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )\r\n      }\r\n    </Box>\r\n\r\n  </Box>\r\n}\r\n\r\nexport default MyChats;","import React,{useEffect,useState} from \"react\";\r\nimport Helmet from \"../commponents/Helmet/Helmet\";\r\nimport {ChatState} from \"../context/ChatProvider\"\r\nimport {Box} from \"@chakra-ui/layout\";\r\nimport SideDrawer from \"../commponents/miscellaneous/SideDrawer\"\r\nimport ChatBox from \"../commponents/miscellaneous/ChatBox\"\r\nimport MyChats from \"../commponents/miscellaneous/MyChats\"\r\nimport {ChakraProvider,extendTheme} from \"@chakra-ui/react\"\r\nconst Messenger = ({ socket }) => {\r\n  useEffect(() => {\r\n     document.querySelector(\"body\").removeAttribute(\"class\")\r\n      localStorage.removeItem(\"chakra-ui-color-mode\")\r\n  },)\r\n  const { user} = ChatState()\r\n  const [fetchAgain,setfetchAgain] = useState(false)\r\n  const [theme,setTheme] = useState()\r\nuseEffect(()=>{\r\nconst newtheme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      body: {\r\n  color: \"var(--color-dark)\",\r\n  background: \"var(--color-light)\",\r\n      },\r\n    },\r\n  },\r\n  config: {\r\n    initialColorMode: localStorage.getItem('chakra-ui-color-mode')||\"var(--color-light)\",\r\n  },\r\n});\r\nsetTheme(newtheme)\r\n},[])\r\n\r\nuseEffect(()=>{\r\n  if(socket && user && user.pseudo){\r\n  socket.emit(\"newuser\",user._id)\r\n}\r\n},[socket,user?.pseudo,user])\r\n\r\n  return (\r\n    <Helmet title={\"messenger\"}>\r\n    <ChakraProvider  theme={theme}>\r\n    <div style={{width:\"100%\"}} className=\"messanger\">\r\n      {user && <SideDrawer/>}\r\n      <Box\r\n      sx={{display:\"flex\",\r\n      justifyContent:\"space-between\",\r\n      width:\"100%\",\r\n      height:\"91.5vh\",\r\n      background:\"var(--color-light)\",\r\n      border:\"2px solid var(--color-light)\",\r\n      gap:\"0px\"\r\n       }}\r\n      >\r\n        {user && <MyChats fetchAgain={fetchAgain}/>}\r\n        {user && <ChatBox fetchAgain={fetchAgain} setfetchAgain={setfetchAgain} socket={socket}/>}\r\n      </Box>\r\n    </div>\r\n    </ChakraProvider>\r\n    </Helmet>\r\n  );\r\n};\r\nexport default Messenger;\r\n"],"names":["props","document","title","_jsx","className","children","selectedChatCompre","_ref","user","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_jsxs","_Fragment","onClick","IconButton","background","color","_hover","cursor","d","base","icon","Modal","size","isCentered","ModalOverlay","ModalContent","height","ModalHeader","sx","display","justifyContent","fontSize","fontFamily","pseudo","ModalCloseButton","ModalBody","flexDirection","alignItems","Image","borderRadius","boxSize","src","picture","alt","Text","md","email","ModalFooter","logout","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","method","url","concat","SERVER_URL","withCredentials","then","key","window","Cookies","expires","localStorage","removeItem","location","reload","catch","err","console","log","stop","apply","arguments","handleFunction","Box","width","px","py","mb","Avatar","mr","name","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","searchResult","setSearchResult","_useState5","_useState6","loading","setloading","_useState7","_useState8","loadingChat","setloadingChat","_ChatState","ChatState","setSelectedChat","chats","setChats","toast","useToast","accessChat","userId","data","_ref2","find","chat","_id","_toConsumableArray","error","status","duration","isClosable","position","t0","_x","handleSearch","_ref3","_callee2","_context2","abrupt","_ref4","dataFilted","filter","usersearch","_usersearch$followers","followers","includes","padding","Tooltip","hasArrow","label","bg","Button","variant","style","Menu","MenuButton","as","rightIcon","MenuList","ProfileModal","MenuItem","Logout","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","paddingBottom","Input","placeholder","value","onChange","e","target","ChatLoading","map","UserListItem","Spinner","ml","m","fetchAgain","setfetchAgain","fetchMessages","selectedChat","groupName","setgroupName","_useState9","_useState10","renamelaoding","setrenamelaoding","handleRemove","userToremove","groupAdmin","chatId","handleGroup","userToAdd","users","u","_ref5","_x2","hamdleRename","_ref6","_callee3","_context3","chatName","_ref7","description","response","message","_ref8","_callee4","query","_context4","_ref9","_usersearch$following","following","_x3","flexWrap","UserBadgeItem","FormControl","isLoading","colorScheme","slice","messages","ScrollableFeed","index","isSameSender","isLastMessage","sender","marginTop","marginRight","backgroundColor","maxWidth","minWidth","marginLeft","isSameSenderMargin","isSameUser","socket","setMessages","setLoading","newmessage","setnewmessage","istyping","setIstyping","typinginfo","settypinginfo","dispatch","useDispatch","onLineusers","useSelector","state","OnlineUsers","emit","fetchChats","GetAllChat","useEffect","on","_selectedChatCompre","sendMessage","type","incomming","sendMessageButton","pb","isGroupChat","toUpperCase","UpdateGroupChat","gap","whoSelected","isOnline","dateParser","updatedAt","overflowY","alignSelf","h","w","margin","ScrollableChat","onKeyDown","isRequired","mt","id","setTimeout","p","SingleChat","groupchatName","setgroupchatName","selectedUsers","setselectedUsers","handleSubmit","length","userInfo","loggedUser","setLogedUser","paddind","borderBottom","GroupchatModal","lg","Stack","_chat$latestMessage","_chat$latestMessage2","_chat$latestMessage3","_chat$latestMessage4","AvatarBadge","fontWeight","latestMessage","LongMessage","querySelector","removeAttribute","theme","setTheme","newtheme","extendTheme","styles","global","body","config","initialColorMode","getItem","Helmet","ChakraProvider","SideDrawer","border","MyChats","ChatBox"],"sourceRoot":""}