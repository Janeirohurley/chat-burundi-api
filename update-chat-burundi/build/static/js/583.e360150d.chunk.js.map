{"version":3,"file":"static/js/583.e360150d.chunk.js","mappings":"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","sources":["commponents/Helmet/Helmet.jsx","commponents/miscellaneous/SingleChat.js","commponents/miscellaneous/ProfileModal.js","commponents/Logout.js","commponents/miscellaneous/UserListItem.js","commponents/miscellaneous/SideDrawer.js","commponents/miscellaneous/UserBadgeItem.js","commponents/miscellaneous/UpdateGroupChat.js","commponents/miscellaneous/ScrollableChat.js","commponents/miscellaneous/ChatBox.js","commponents/miscellaneous/GroupchatModal.js","commponents/miscellaneous/MyChats.js","pages/Messenger.jsx"],"sourcesContent":["import React from \"react\";\r\nconst Helmet = (props) => {\r\n  document.title = \"Chat Burundi - \" + props.title;\r\n  return <div className=\"w-100\">{props.children}</div>;\r\n};\r\nexport default Helmet;\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Text, Box } from \"@chakra-ui/layout\"\r\nimport { IconButton, FormControl } from \"@chakra-ui/react\"\r\nimport {whoSelected,isOnline,dateParser} from \"../Utils\"\r\nimport UpdateGroupChat from \"./UpdateGroupChat\"\r\nimport ProfileModal from \"./ProfileModal\"\r\nimport { useSelector } from \"react-redux\"\r\nimport ScrollableChat from \"./ScrollableChat\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport { SERVER_URL } from '../../Domain';\r\nimport { Spinner, Input, useToast,Button} from \"@chakra-ui/react\"\r\nimport {Avatar} from \"@chakra-ui/react\"\r\nimport {GetAllChat} from \"../../redux/slices/AllChat\";\r\nimport axios from \"axios\"\r\nimport {useDispatch} from \"react-redux\"\r\nvar selectedChatCompre\r\nconst SingleChat = ({ fetchAgain, setfetchAgain,socket }) => {\r\n    const [messages, setMessages] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [newmessage, setnewmessage] = useState()\r\n    const [istyping,setIstyping]=useState(false)\r\n    const [typinginfo,settypinginfo]=useState()\r\n    const dispatch = useDispatch()\r\n    const onLineusers = useSelector((state)=>state.OnlineUsers)\r\n    const toast = useToast()\r\n    const { setSelectedChat, selectedChat, user,setChats } = ChatState()\r\n    const fetchMessages = async () => {\r\n        if (!selectedChat) return;\r\n        setLoading(true)\r\n        await axios({\r\n            method: \"get\",\r\n            url: `${SERVER_URL}/api/message/${selectedChat._id}`,\r\n            withCredentials: true\r\n        })\r\n            .then(({ data }) => {\r\n                setMessages(data)\r\n                setLoading(false)\r\n\r\n                socket.emit(\"join chat\",selectedChat._id,user._id)\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false)\r\n                toast({\r\n                    title: \"error occured\",\r\n                    description: \"fail to load the messages\",\r\n                    status: \"error\",\r\n                    duration: 2000,\r\n                    isClosable: true,\r\n                    position: \"bottom-left\",\r\n                });\r\n            })\r\n    }\r\n    //updates all chats========================================================================\r\nconst fetchChats = async () => {\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${SERVER_URL}/api/chat`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data }) => {\r\n        dispatch(GetAllChat.GetAll(data))\r\n          setChats(data)\r\n        })\r\n        .catch((error) => {\r\n          toast({\r\n            title: \"something went wrang try again\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n  }\r\n  //==================================================================\r\n    useEffect(() => {\r\n        fetchMessages()\r\n        selectedChatCompre = selectedChat\r\n        settypinginfo({\r\n            user,\r\n            selectedChatCompre\r\n        })\r\n    }, [selectedChat])\r\n\r\n        socket.on(\"message received\",(data)=>{\r\n            fetchChats()\r\n             if(!selectedChatCompre || selectedChatCompre._id !== data.chat._id){\r\n//aha ntaco gukora gihar kk turab k chat yabaye selectionne ko isa na chat socket izanye so dusanz bidasa nat mpamv yo kugra update ya chat\r\n                \r\n             }else{\r\n                if(data.sender._id !== user._id){\r\n                    const messasgeSended = [...messages]\r\n                    messasgeSended.push(data)\r\n                  setMessages(messasgeSended)\r\n                }\r\n             }\r\n        })\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        socket.on(\"istyping\",(data)=>{\r\n            if(data.user._id === user._id) return\r\n            if(data.selectedChatCompre._id === selectedChatCompre?._id) {\r\n             setIstyping(true)   \r\n            } \r\n        })\r\n        socket.on(\"isnottyping\",(data)=>{\r\n          setIstyping(false)\r\n        })\r\n    })\r\n\r\n    const sendMessage = async (e) => {\r\n        if (e.key === \"Enter\" && newmessage) {\r\n            socket.emit(\"notyping\",typinginfo)\r\n            setnewmessage(\"\")\r\n            await axios({\r\n                method: \"post\",\r\n                url: `${SERVER_URL}/api/message`,\r\n                withCredentials: true,\r\n                data: {\r\n                    message: newmessage,\r\n                    chatId: selectedChat._id,\r\n                    type: \"msg\",\r\n                    incomming: false\r\n                }\r\n            })\r\n                .then(({ data }) => {\r\n                    console.log(data)\r\n                    socket.emit(\"new message\",data)\r\n                    setMessages([...messages, data])\r\n                    fetchChats()\r\n                })\r\n                .catch((error) => {\r\n                    toast({\r\n                        title: \"error occured\",\r\n                        description: \"fail to send the message\",\r\n                        status: \"error\",\r\n                        duration: 2000,\r\n                        isClosable: true,\r\n                        position: \"bottom-left\",\r\n                    });\r\n                })\r\n\r\n        }\r\n    }\r\nconst sendMessageButton = async (e) => {\r\n    if(!newmessage) return;\r\n                var messasgeSended={\r\n                chat:selectedChat,\r\n                createdAt:new Date(),\r\n                message:newmessage,\r\n                sender:user,\r\n                type:\"msg\",\r\n                updatedAt:new Date(),\r\n                __v:0,\r\n                _id:new Date().getTime(),\r\n                incomming: false,\r\n                sending:\"sending\"\r\n                }\r\n                console.log(messasgeSended);\r\n                setMessages([...messages, messasgeSended])\r\n            setnewmessage(\"\")\r\n            socket.emit(\"notyping\",typinginfo)\r\n            await axios({\r\n                method: \"post\",\r\n                url: `${SERVER_URL}/api/message`,\r\n                withCredentials: true,\r\n                data: {\r\n                    message: newmessage,\r\n                    chatId: selectedChat._id,\r\n                    type: \"msg\",\r\n                    incomming: false\r\n                }\r\n            })\r\n                .then(({ data }) => {\r\n                    socket.emit(\"new message\",data)\r\n                    setMessages([...messages, data])\r\n                    fetchChats()\r\n                })\r\n                .catch((error) => {\r\n                    toast({\r\n                        title: \"warning\",\r\n                        description: \"can't send empty message \",\r\n                        status: \"warning\",\r\n                        duration: 2000,\r\n                        isClosable: true,\r\n                        position: \"bottom-left\",\r\n                    });\r\n                })\r\n    }\r\n    const typingHindler = (e) => {\r\n        setnewmessage(e.target.value)\r\n        //set status if user is typing\r\n        socket.emit(\"typing\",typinginfo)\r\n      //wait 3 second if user is not typing\r\n        setTimeout(() => {\r\n         socket.emit(\"notyping\",typinginfo)\r\n        }, 3000)\r\n    }\r\n    return <>\r\n        {\r\n            selectedChat ? (<>\r\n\r\n                <Text\r\n                    fontSize={{ base: \"28px\", md: \"30px\" }}\r\n                    pb={3}\r\n                    px={2}\r\n                    width=\"100%\"\r\n                    display=\"flex\"\r\n                    justifyContent={{ base: \"space-between\" }}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <IconButton\r\n                        display={{ base: \"flex\", md: \"none\" }}\r\n                        icon={<i className=\"ri ri-arrow-left-line\"></i>}\r\n                        onClick={() => setSelectedChat(\"\")}\r\n                        color=\"var(--color-name)\"\r\n                        background=\"var(--color-white)\"\r\n                        _hover={{\r\n                        background: \"var(--color-light)\",\r\n                        color: \"white\",\r\n                        cursor: \"pointer\"\r\n                  }}\r\n                    />\r\n                    {\r\n                        !selectedChat.isGroupChat ? (\r\n                            <>  \r\n                                <div style={{display:\"flex\",gap:\"1rem\"}}>\r\n                                <Avatar src={whoSelected(user?._id, selectedChat?.users).picture}/>\r\n                                <div>\r\n                                <Text fontSize=\"1rem\" color=\"var(--color-name)\">{whoSelected(user?._id, selectedChat?.users).pseudo}</Text>\r\n                                {isOnline(whoSelected(user?._id, selectedChat?.users)._id,onLineusers) && !istyping && <Text fontSize=\"0.7rem\" color=\"var(--color-name)\">Online</Text>}\r\n                                {istyping && <Text fontSize=\"0.7rem\" color=\"blue\">Typing...</Text>}\r\n                                {!istyping && !isOnline(whoSelected(user?._id, selectedChat?.users)._id,onLineusers) && <Text fontSize=\"0.7rem\" color=\"var(--color-name)\">{dateParser(selectedChat?.updatedAt)}</Text>}\r\n                                </div>\r\n                                </div>\r\n                                <ProfileModal user={whoSelected(user?._id, selectedChat?.users)} />\r\n                            </>\r\n                        ) :\r\n                            (<>\r\n                                {selectedChat.chatName.toUpperCase()}\r\n                                {\r\n                                    <UpdateGroupChat\r\n                                        fetchAgain={fetchAgain}\r\n                                        setfetchAgain={setfetchAgain}\r\n                                        fetchMessages={fetchMessages}\r\n                                    />\r\n                                }\r\n\r\n                            </>)\r\n                    }\r\n                </Text>\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                    justifyContent=\"flex-end\"\r\n                    padding={3}\r\n                    background=\"var(--color-light)\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    overflowY=\"hidden\"\r\n                >\r\n                    {\r\n                        loading ? <Spinner\r\n                            size={\"xl\"}\r\n                            alignSelf=\"center\"\r\n                            h={20}\r\n                            w={20}\r\n                            margin=\"auto\"\r\n                        /> :\r\n                            (\r\n                                <div className=\"messagesbody\">\r\n                                    <ScrollableChat messages={messages}/>\r\n                                </div>\r\n                            )\r\n                    }\r\n                    { !loading &&\r\n                    <FormControl onKeyDown={sendMessage} isRequired mt={3} display=\"flex\" gap={2}>\r\n                        <Input variant=\"filled\"\r\n                         background=\"var(--color-white)\"\r\n                          placeholder=\"enter a message .... \" \r\n                          onChange={typingHindler} \r\n                          value={newmessage}\r\n                          color=\"var(--color-name)\"\r\n                          _hover={{\r\n                           background: \"var(--color-white)\",\r\n                           color:\"var(--color-name)\",\r\n                           \r\n                               }} \r\n                        />\r\n                        <Button colorScheme=\"blue\" onClick={()=> sendMessageButton()}>Send</Button>\r\n                    </FormControl>\r\n                }\r\n                </Box>\r\n            </>)\r\n                :\r\n                (<Box\r\n                    height=\"100%\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Text fontSize=\"2xl\" color=\"var(--color-name)\" pb={3}>select chat to start chatting</Text>\r\n                </Box>)\r\n        }\r\n    </>\r\n}\r\n\r\nexport default SingleChat;","import React from \"react\"\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { IconButton } from \"@chakra-ui/button\"\r\nimport { Text } from \"@chakra-ui/layout\"\r\nimport { Modal, ModalOverlay, ModalBody, ModalHeader, ModalContent, ModalCloseButton, ModalFooter, Image } from '@chakra-ui/react'\r\nconst ProfileModal = ({ user, children }) => {\r\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\r\n\treturn (\r\n\t\t<>{\r\n\t\t\tchildren ? (\r\n\t\t\t\t<span onClick={onOpen}>{children}</span>\r\n\t\t\t) : (\r\n\t\t\t\t<IconButton \r\n\t\t\t\tbackground=\"var(--color-white)\"\r\n\t\t\t\tcolor=\"var(--color-name)\"\r\n\t\t\t\t     _hover={{\r\n                    background: \"var(--color-light)\",\r\n                    color: \"white\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n\t\t\t\td={{ base: \"flex\" }} icon={<i className=\"ri-eye-line\" />} onClick={onOpen} />\r\n\t\t\t)}\r\n\t\t\t<Modal size=\"lg\" isOpen={isOpen} onClose={onClose} isCentered>\r\n\t\t\t\t<ModalOverlay />\r\n\t\t\t\t<ModalContent\r\n\t\t\t\tbackground=\"var(--color-white)\"\r\n\t\t\t\tcolor=\"var(--color-name)\"\r\n\t\t\t\t height=\"410px\">\r\n\t\t\t\t\t<ModalHeader\r\n\t\t\t\t\t\tsx={{ display: \"flex\", justifyContent: \"center\", fontSize: \"40px\", fontFamily: \"Work sans\" }}\r\n\t\t\t\t\t>{user.pseudo}</ModalHeader>\r\n\t\t\t\t\t<ModalCloseButton />\r\n\t\t\t\t\t<ModalBody\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\tflexDirection=\"column\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tborderRadius=\"full\"\r\n\t\t\t\t\t\t\tboxSize=\"150px\"\r\n\t\t\t\t\t\t\tsrc={user.picture}\r\n\t\t\t\t\t\t\talt={user.pseudo}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Text fontSize={{ base: \"1.5rem\", md: \"2rem\" }}>Email : {user.email}</Text>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</ModalContent>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ProfileModal;","\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { SERVER_URL } from '../Domain';\r\nconst Logout = () => {\r\nconst removeCookie = (key)=>{\r\n    if(window !== \"undefined\"){\r\n        Cookies.remove(key,{expires:1})\r\n    }\r\n\r\n}\r\n\r\n    const logout = async () => {\r\n        await axios({\r\n            method:\"get\",\r\n            url: `${SERVER_URL}/api/user/logout`,\r\n            withCredentials: true,\r\n        })\r\n        .then(()=>{\r\n            removeCookie(\"jwt\")\r\n            localStorage.removeItem(\"token\")\r\n            window.location.reload()\r\n        })\r\n        .catch((err)=>console.log(err))\r\n    }\r\n    logout();\r\n}\r\nexport default Logout;","import React from \"react\"\r\nimport { Box, Avatar, Text } from \"@chakra-ui/react\"\r\nconst UserListItem = ({ handleFunction, user }) => {\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      background=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38b2ac\",\r\n        color: \"white\",\r\n        cursor: \"pointer\"\r\n      }}\r\n      width=\"100%\"\r\n      alignItems=\"center\"\r\n      display=\"flex\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={3}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.pseudo}\r\n        src={user.picture}\r\n      />\r\n      <Box>\r\n        <Text>{user.pseudo}</Text>\r\n        <Text fontSize=\"xs\"> <b>Email :</b> {user.email}</Text>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default UserListItem;","import React, { useState } from \"react\"\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport axios from \"axios\"\r\nimport { Spinner } from \"@chakra-ui/spinner\"\r\nimport {\r\n  Tooltip,\r\n  Menu, MenuButton, Avatar,\r\n  MenuList, MenuItem, Drawer,\r\n  DrawerOverlay, DrawerContent,\r\n  DrawerHeader,\r\n  DrawerBody,\r\n  useToast,\r\n  Input,\r\n} from '@chakra-ui/react'\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport Logout from \"../Logout\"\r\nimport ChatLoading from \"./ChatLoading\"\r\nimport UserListItem from \"./UserListItem\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport { SERVER_URL } from '../../Domain';\r\nconst SideDrawer = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const [search, setSearch] = useState(\"\")\r\n  const [searchResult, setSearchResult] = useState([])\r\n  const [loading, setloading] = useState(false)\r\n  const [loadingChat, setloadingChat] = useState()\r\n  const { user, setSelectedChat, chats, setChats } = ChatState()\r\n  const toast = useToast()\r\n  const accessChat = async (userId) => {\r\n    try {\r\n      setloadingChat(true)\r\n      await axios({\r\n        method: \"post\",\r\n        url: `${SERVER_URL}/api/chat`,\r\n        withCredentials: true,\r\n        data: { userId: userId }\r\n      })\r\n        .then(({ data }) => {\r\n          if (!chats.find((chat) => chat._id === data._id)) setChats([data, ...chats])\r\n          setSelectedChat(data)\r\n          setloadingChat(false)\r\n          onClose()\r\n        })\r\n        .catch((error) => {\r\n          setloadingChat(false)\r\n          toast({\r\n            title: \"something went wrang try again\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  //search user to chat\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please enter something to search\",\r\n        status: \"warning\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      setloading(true)\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${SERVER_URL}/api/user/search/user?search=${search.trim()}`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data }) => {\r\n          setloading(false)\r\n          const dataFilted = data.filter((usersearch) => usersearch.followers?.includes(user._id))\r\n          setSearchResult(dataFilted)\r\n          console.log(dataFilted)\r\n        })\r\n        .catch((error) => {\r\n          setloading(false)\r\n          toast({\r\n            title: \"something went wrang try again\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n          // navigate(\"/login\")\r\n        })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  return <>\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        padding: \" 5px 10px 5px 10px\",\r\n        background: \"var(--color-white)\",\r\n\r\n      }}\r\n    >\r\n      <Tooltip hasArrow label='Search user to chat' bg='var(--color-white)' color=\"var(--color-name)\">\r\n        <Button \r\n        _hover={{\r\n        background: \"var(--color-white)\",\r\n        color: \"white\",\r\n        cursor: \"pointer\"\r\n                  }}\r\n        variant=\"ghost\" onClick={onOpen}>\r\n          <i className=\"ri ri-search-line\" style={{color:\"var(--color-name)\"}}></i>\r\n          <Text display={{ base: \"none\", md: \"flex\" }} px=\"4\" color=\"var(--color-name)\">Search User</Text>\r\n        </Button>\r\n      </Tooltip>\r\n      <Text fontSize=\"2xl\" color=\"var(--color-name)\">Chat burundi</Text>\r\n      <div>\r\n        <Menu>\r\n          <MenuButton\r\n          _hover={{\r\n           background: \"var(--color-light)\",\r\n           color: \"white\",\r\n           cursor: \"pointer\"\r\n            }}\r\n           bg='var(--color-white)' as={Button} rightIcon={<i className=\"ri-arrow-drop-down-line\"></i>}>\r\n            <Avatar size=\"sm\" name={user.pseudo} src={user.picture} />\r\n          </MenuButton>\r\n          <MenuList>\r\n            <ProfileModal user={user}>\r\n              <MenuItem>profile</MenuItem>\r\n            </ProfileModal>\r\n            <MenuItem onClick={() => Logout()}>Logout</MenuItem>\r\n          </MenuList>\r\n        </Menu>\r\n      </div>\r\n    </Box>\r\n    <Drawer \r\n    placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n      <DrawerOverlay />\r\n      <DrawerContent>\r\n        <DrawerHeader borderBottomWidth=\"1px\"> Search users</DrawerHeader>\r\n        <DrawerBody>\r\n          <Box \r\n          display=\"flex\" paddingBottom={2}>\r\n            <Input\r\n              placeholder=\"Search by email or usename\"\r\n              mr={2}\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n            <Button onClick={handleSearch}>Go</Button>\r\n          </Box>\r\n          {\r\n            loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                  user={user}\r\n                />\r\n              ))\r\n            )\r\n          }\r\n          {\r\n            loadingChat && <Spinner ml='auto' d='flex' />\r\n          }\r\n        </DrawerBody>\r\n      </DrawerContent>\r\n    </Drawer>\r\n  </>\r\n}\r\n\r\nexport default SideDrawer;","import React from \"react\"\r\nimport { Box } from \"@chakra-ui/layout\"\r\nimport { Avatar,Tooltip } from \"@chakra-ui/react\"\r\nconst UserBadgeItem = ({ user, handleFunction }) => {\r\n  return <Box\r\n    px={2}\r\n    py={1}\r\n    m={1}\r\n    mb={2}\r\n    variant=\"solid\"\r\n    display=\"flex\"\r\n    fontSize={12}\r\n    cursor=\"pointer\"\r\n    gap={2}\r\n\r\n  >\r\n        <Tooltip hasArrow label={user?.pseudo} bg='var(--color-white)' color=\"var(--color-name)\">\r\n        <Avatar src={user.picture} size=\"sm\" />\r\n        </Tooltip>\r\n        {\"   \"}\r\n        <i className=\"ri ri-close-line\" onClick={handleFunction}></i>\r\n  </Box>\r\n}\r\n\r\nexport default UserBadgeItem;","import React, { useState } from \"react\"\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { IconButton } from \"@chakra-ui/button\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport UserBadgeItem from \"./UserBadgeItem\"\r\nimport { Spinner } from \"@chakra-ui/spinner\"\r\nimport axios from \"axios\"\r\nimport UserListItem from \"./UserListItem\"\r\nimport { SERVER_URL } from '../../Domain';\r\nimport {\r\n  Modal, ModalOverlay, ModalBody, ModalHeader, ModalContent,\r\n  ModalCloseButton, ModalFooter, Button, useToast, Box, FormControl, Input\r\n} from '@chakra-ui/react'\r\nconst UpdateGroupChat = ({ fetchAgain, setfetchAgain,fetchMessages }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const { setSelectedChat, selectedChat, user } = ChatState()\r\n  const [search, setSearch] = useState(\"\")\r\n  const [searchResult, setSearchResult] = useState([])\r\n  const [loading, setloading] = useState(false)\r\n  const [groupName, setgroupName] = useState()\r\n  const [renamelaoding, setrenamelaoding] = useState(false)\r\n  const toast = useToast()\r\n  const handleRemove = async (userToremove) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && userToremove._id !== user._id) {\r\n      toast({\r\n        title: \"only admin can remove sommeone\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\"\r\n      })\r\n      return\r\n    }\r\n    setloading(true)\r\n    await axios({\r\n      method: \"put\",\r\n      url: `${SERVER_URL}/api/chat/groupremove`,\r\n      withCredentials: true,\r\n      data: {\r\n        chatId: selectedChat._id,\r\n        userId: userToremove._id\r\n      }\r\n    }).then(({ data }) => {\r\n      console.log(data)\r\n      userToremove._id === user._id ? setSelectedChat() : setSelectedChat(data)\r\n      fetchMessages()\r\n      setfetchAgain(!fetchAgain)\r\n      setloading(false)\r\n      toast({\r\n        title: \"add removed successifull\",\r\n        status: \"success\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }).catch((error) => {\r\n      console.log(error)\r\n      toast({\r\n        title: \"something went wrong try again\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    })\r\n    setloading(false)\r\n  }\r\n  const handleGroup = async (userToAdd) => {\r\n    if (selectedChat.users.find((u) => u._id === userToAdd._id)) {\r\n      toast({\r\n        title: `${userToAdd.pseudo} has already in group`,\r\n        status: \"warning\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      return\r\n    }\r\n    setloading(true)\r\n    await axios({\r\n      method: \"put\",\r\n      url: `${SERVER_URL}/api/chat/addTogroup`,\r\n      withCredentials: true,\r\n      data: {\r\n        chatId: selectedChat._id,\r\n        userId: userToAdd._id\r\n      }\r\n    }).then(({ data }) => {\r\n      setSelectedChat(data)\r\n      setfetchAgain(!fetchAgain)\r\n      setloading(false)\r\n      toast({\r\n        title: \"add user successifull\",\r\n        status: \"success\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }).catch((error) => {\r\n      setloading(false)\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    })\r\n\r\n  }\r\n  //==============================================================================================================\r\n  const hamdleRename = async () => {\r\n    if (!groupName || groupName === \" \") return\r\n    try {\r\n      setrenamelaoding(true)\r\n      await axios({\r\n        method: \"put\",\r\n        url: `${SERVER_URL}/api/chat/rename`,\r\n        withCredentials: true,\r\n        data: {\r\n          chatId: selectedChat._id,\r\n          chatName: groupName\r\n        }\r\n      })\r\n        .then(({ data }) => {\r\n          setSelectedChat(data)\r\n          setfetchAgain(!fetchAgain)\r\n          setrenamelaoding(false)\r\n          setgroupName(\"\")\r\n        })\r\n        .catch((error) => {\r\n          setrenamelaoding(false)\r\n          toast({\r\n            title: \"error occured\",\r\n            description: error.response.data.message,\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  const handleSearch = async (query) => {\r\n    setSearch(query)\r\n    if (!query) return\r\n    setloading(true)\r\n    try {\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${SERVER_URL}/api/user/search/user?search=${search}`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data }) => {\r\n          setloading(false)\r\n          const dataFilted = data.filter((usersearch) => usersearch.following?.includes(user._id))\r\n          setSearchResult(dataFilted)\r\n        })\r\n        .catch((error) => {\r\n          setloading(false)\r\n          toast({\r\n            title: \"error occured\",\r\n            description: \"error to load the search results\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <IconButton d={{ base: \"flex\" }} icon={<i className=\"ri-eye-line\" />} onClick={onOpen} />\r\n    <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader\r\n          sx={{ display: \"flex\", justifyContent: \"center\", fontSize: \"20px\" }}\r\n        >{selectedChat.chatName}</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <Box display=\"flex\" flexWrap=\"wrap\" width=\"100%\">\r\n            {\r\n              selectedChat.users.map((user) => (\r\n                <UserBadgeItem key={user._id} user={user} handleFunction={() => handleRemove(user)} />\r\n              )\r\n              )\r\n            }\r\n          </Box>\r\n          <>\r\n            {\r\n              user._id === selectedChat.groupAdmin._id &&\r\n              <>\r\n                <FormControl display=\"flex\">\r\n                  <Input placeholder=\"chat Name\" mb={1}\r\n                    onChange={(e) => setgroupName(e.target.value)}\r\n                  />\r\n                  <Button variant=\"solid\"\r\n                    ml={1} isLoading={renamelaoding}\r\n                    onClick={hamdleRename}\r\n                    colorScheme=\"blue\"\r\n                  >update</Button>\r\n                </FormControl>\r\n                <FormControl d=\"flex\">\r\n                  <Input placeholder=\"add a user to group\" mb={1}\r\n                    onChange={(e) => handleSearch(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </>\r\n            }\r\n          </>\r\n          {\r\n            loading ? (<Spinner size=\"lg\" />) :\r\n\r\n              (\r\n                searchResult?.slice(0, 3).map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    handleFunction={() => handleGroup(user)}\r\n                    user={user}\r\n                  />\r\n                ))\r\n              )\r\n          }\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button colorScheme=\"red\" mr={3} onClick={() => handleRemove(user)}>leave group</Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  </>\r\n}\r\nexport default UpdateGroupChat;","import React from \"react\";\r\nimport ScrollableFeed from \"react-scrollable-feed\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport {isSameSender, isLastMessage,isSameSenderMargin,isSameUser} from \"../Utils\"\r\nimport {Tooltip} from \"@chakra-ui/react\"\r\nimport {Avatar} from \"@chakra-ui/avatar\"\r\nconst ScrollableChat = ({messages}) => {\r\n    const { user } = ChatState()\r\n    return (\r\n        <ScrollableFeed className=\"messagesbody\">\r\n        {\r\n         messages && messages.map((message,index)=>(\r\n        <div style={{display:\"flex\"}} key={message._id}>\r\n            {\r\n                (isSameSender(messages,message,index,user._id)\r\n\r\n               || isLastMessage(messages,index,user._id)\r\n            )&& (\r\n              <Tooltip\r\n              label={message.sender.pseudo}\r\n              hasArrow\r\n              >\r\n              <Avatar\r\n            marginTop=\"7px\"\r\n            marginRight={1}\r\n            size=\"sm\"\r\n            cursor=\"pointer\"\r\n            name={\"message.sender.name\"}\r\n            src={message.sender.picture}\r\n              />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n            style={{\r\n                backgroundColor : `${\r\n                    message.sender._id === user._id ? \"var(--color-white)\":\"#B9F5D0\"\r\n                }`,\r\n                borderRadius:\"10px\",\r\n                padding:\"5px 15px\",\r\n                maxWidth:\"75%\",\r\n                minWidth:\"60px\",\r\n                marginLeft:isSameSenderMargin(messages,message,index,user._id),\r\n                marginTop:isSameUser(messages,message,index,user._id) ? 3 : 10,\r\n                color:`${\r\n                    message.sender._id === user._id ? \"var(--color-name)\":\"black\"\r\n                }`,\r\n            }}\r\n            >{message.message}\r\n\r\n            </span>\r\n        </div>\r\n                ))\r\n        }\r\n        </ScrollableFeed>\r\n)}\r\nexport default ScrollableChat;","import React from \"react\"\r\nimport { Box } from \"@chakra-ui/react\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport SingleChat from \"./SingleChat\"\r\nconst ChatBox = ({ fetchAgain, setfetchAgain,socket }) => {\r\n    const { selectedChat } = ChatState()\r\n    return <Box\r\n        display={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n        alignItems=\"center\"\r\n        flexDirection=\"column\"\r\n        p={3}\r\n        background=\"var(--color-white)\"\r\n        width={{ base: \"100%\", md: \"68%\" }}\r\n    >\r\n        <SingleChat fetchAgain={fetchAgain} setfetchAgain={setfetchAgain} socket={socket}/>\r\n    </Box>\r\n}\r\n\r\nexport default ChatBox;","import React, { useState } from \"react\"\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { SERVER_URL } from '../../Domain';\r\nimport axios from \"axios\"\r\nimport UserListItem from \"./UserListItem\"\r\nimport UserBadgeItem from \"./UserBadgeItem\"\r\nimport {isEmpty} from \"../Utils\"\r\nimport {\r\n  Modal,\r\n  ModalOverlay, ModalBody, ModalHeader, ModalContent,\r\n  ModalCloseButton, ModalFooter,\r\n  Button, useToast, Input, Box\r\n} from '@chakra-ui/react'\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport { FormControl } from \"@chakra-ui/form-control\"\r\nconst GroupchatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const [groupchatName, setgroupchatName] = useState()\r\n  const [selectedUsers, setselectedUsers] = useState([])\r\n  const [search, setSearch] = useState(\"\")\r\n  const [searchResult, setSearchResult] = useState([])\r\n  const [loading, setloading] = useState(false)\r\n  const toast = useToast()\r\n  const { user, chats, setChats } = ChatState()\r\n  const handleSearch = async (query) => {\r\n    query.trim()\r\n    if (isEmpty(query)) return setSearchResult([])\r\n      setSearch(query)\r\n    setloading(true)\r\n    try {\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${SERVER_URL}/api/user/search/user?search=${search}`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data }) => {\r\n          setloading(false)\r\n          const dataFilted = data.filter((usersearch) => usersearch.following?.includes(user._id))\r\n          setSearchResult(dataFilted)\r\n        })\r\n        .catch((error) => {\r\n          setloading(false)\r\n          toast({\r\n            title: \"error occured\",\r\n            description: \"error to load the search results\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  const handleSubmit = async () => {\r\n    if (!groupchatName || selectedUsers.length === 0) {\r\n      toast({\r\n        title: `Please fill all the filds `,\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      return\r\n    }\r\n    try {\r\n      await axios({\r\n        method: \"post\",\r\n        url: `${SERVER_URL}/api/chat/group`,\r\n        withCredentials: true,\r\n        data: {\r\n          name: groupchatName,\r\n          users: selectedUsers\r\n        }\r\n      })\r\n        .then(({ data }) => {\r\n          setChats([data, ...chats])\r\n          toast({\r\n            title: \"Alert\",\r\n            description: \"group create successfully \",\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n          onClose()\r\n        })\r\n        .catch(({ response }) => {\r\n          toast({\r\n            title: \"error while creating group\",\r\n            description: response.data,\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  const handleDelete = (userToremove) => {\r\n    //  \ttoast({\r\n    //   title:`${userToremove.pseudo} removed `,\r\n    //   status:\"success\",\r\n    //   duration:5000,\r\n    //   isClosable:true,\r\n    //   position:\"bottom-left\",\r\n    // });\r\n    setselectedUsers(selectedUsers.filter((user) => user._id !== userToremove._id))\r\n  }\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: `${userToAdd.pseudo} has already added`,\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      return\r\n    }\r\n    setselectedUsers([...selectedUsers, userToAdd])\r\n    toast({\r\n      title: `${userToAdd.pseudo} added`,\r\n      status: \"success\",\r\n      duration: 5000,\r\n      isClosable: true,\r\n      position: \"bottom-left\",\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            sx={{ display: \"flex\", justifyContent: \"center\", fontSize: \"35px\" }}\r\n          >create groupe chat</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n          >\r\n            <FormControl>\r\n              <Input placeholder=\"Groupe name\" mb={3}\r\n                onChange={(e) => setgroupchatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input placeholder=\"users ex. janeiro ,mama,papa\" mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box display=\"flex\" flexWrap=\"wrap\" width=\"100%\">\r\n              {selectedUsers.map((user) => (\r\n                <UserBadgeItem key={user._id} user={user} handleFunction={() => handleDelete(user)} />\r\n              ))}\r\n            </Box>\r\n\r\n            {\r\n              loading ? (<div>Loading .... </div>) :\r\n\r\n                (\r\n                  searchResult?.slice(0, 4).map((user) => (\r\n                    <UserListItem\r\n                      key={user._id}\r\n                      handleFunction={() => handleGroup(user)}\r\n                      user={user}\r\n                    />\r\n                  ))\r\n                )\r\n            }\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={handleSubmit}>Create Chat</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GroupchatModal;","import React, { useState, useEffect } from \"react\"\r\nimport { ChatState } from \"../../context/ChatProvider\"\r\nimport { useToast, Button, Text, Stack, Avatar,AvatarBadge} from \"@chakra-ui/react\"\r\nimport { Box } from \"@chakra-ui/layout\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { SERVER_URL } from '../../Domain';\r\nimport ChatLoading from \"./ChatLoading\"\r\nimport GroupchatModal from \"./GroupchatModal\"\r\nimport axios from \"axios\"\r\nimport { whoSelected,LongMessage,isOnline,dateParser } from \"../Utils\"\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const userInfo = useSelector((state) => state.userInfo)\r\n  const [loggedUser, setLogedUser] = useState()\r\n  const { setSelectedChat, chats, setChats, selectedChat } = ChatState()\r\n    const onLineusers = useSelector((state)=>state.OnlineUsers)\r\n  const toast = useToast()\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${SERVER_URL}/api/chat`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data }) => {\r\n          setChats(data)\r\n        })\r\n        .catch((error) => {\r\n          toast({\r\n            title: \"something went wrang try again\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        })\r\n\r\n    } catch (error) {\r\n      toast({\r\n        title: \"something went wrang try again\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setLogedUser(userInfo)\r\n    fetchChats()\r\n  }, [fetchAgain])\r\n  return <Box\r\n    display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n    flexDirection=\"column\"\r\n    alignItems=\"center\"\r\n    paddind={3}\r\n    background=\"var(--color-white)\"\r\n    width={{ base: \"100%\", md: \"31%\" }}\r\n    overflowY=\"hidden\"\r\n  >\r\n    <Box\r\n      px={3}\r\n      pb={2}\r\n      fontSize={{ base: \"20px\", md: \"25px\" }}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      color=\"var(--color-name)\"\r\n      borderBottom=\"1px solid var(--color-light)\"\r\n      >\r\n      Chats\r\n      <GroupchatModal>\r\n        <Button\r\n          h=\"1.5rem\"\r\n          width=\"0.5rem\"\r\n          fontSize={{ base: \"1rem\", md: \"1rem\", lg: \"1rem\" }}\r\n          background=\"var(--color-light)\"\r\n          _hover={{\r\n          background: \"var(--color-primary)\",\r\n          color: \"white\",\r\n          cursor: \"pointer\"\r\n          }}\r\n        ><i className=\"ri ri-add-line\"></i></Button>\r\n      </GroupchatModal>\r\n    </Box>\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      paddind={3}\r\n      width=\"100%\"\r\n      height=\"90%\"\r\n      borderRadius=\"lg\"\r\n      overflowY=\"hidden\"\r\n    >\r\n      {\r\n        chats ? (\r\n          <Stack\r\n            overflowY=\"scroll\"\r\n            className=\"MyChats\"\r\n            padding=\"5px\"\r\n          >\r\n            {\r\n              chats.map((chat) => (\r\n                <Box\r\n                  onClick={() => setSelectedChat(chat)}\r\n                  _hover={{\r\n                    background: \"var(--color-primary)\",\r\n                    color: \"white\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                  width=\"100%\"\r\n                  key={chat._id}\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  color={selectedChat === chat ? \"white\" : \"var(--color-name)\"}\r\n                  background={selectedChat === chat ? \"#38b2ac\" : \"var(--color-light)\"}\r\n                  px={3}\r\n                  py={2}\r\n                  mb={3}\r\n                  borderRadius=\"lg\"\r\n                >\r\n                  <Avatar\r\n                    mr={2}\r\n                    size=\"md\"\r\n                    cursor=\"pointer\"\r\n                    name={!chat.isGroupChat ? whoSelected(loggedUser?._id, chat?.users).pseudo : chat.chatName}\r\n                    src={!chat.isGroupChat ? whoSelected(loggedUser?._id, chat?.users).picture : \" \"}\r\n                  ><AvatarBadge boxSize={!chat.isGroupChat &&\r\n                  isOnline(whoSelected(loggedUser?._id, chat?.users)._id,onLineusers) ? \"1rem\":\"0rem\"} bg=\"green.500\"/>\r\n                  </Avatar>\r\n                  <Box width=\"100%\">\r\n                  <Box\r\n                  sx={{display:\"flex\",\r\n                       alignItems:\"center\",\r\n                       justifyContent:\"space-between\",\r\n                       width:\"100%\"\r\n                      }}\r\n                  >\r\n                    <Text sx={{\r\n                      fontWeight:\"bold\",\r\n                      color:\"var(--color-name)\"\r\n                    }}>\r\n                      {\r\n                        !chat.isGroupChat ? (\r\n                          whoSelected(loggedUser?._id, chat?.users).pseudo\r\n                        ) : (chat.chatName)\r\n                      }\r\n                    </Text>\r\n                    <span style={{fontSize:\"0.8rem\"}}>{dateParser(chat.latestMessage?.updatedAt)}</span>\r\n                    </Box>\r\n                    <Box\r\n                    display=\"flex\"\r\n                    fontSize=\"sm\"\r\n                    gap={1}\r\n                    >\r\n                      <Text>{chat.latestMessage?.sender.pseudo === userInfo.pseudo ? \"You\": chat.latestMessage?.sender.pseudo}</Text>\r\n                      :\r\n                      <Text>{LongMessage(chat.latestMessage?.message)}</Text>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              ))\r\n            }\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )\r\n      }\r\n    </Box>\r\n\r\n  </Box>\r\n}\r\n\r\nexport default MyChats;","import React,{useEffect,useState} from \"react\";\r\nimport Helmet from \"../commponents/Helmet/Helmet\";\r\nimport {ChatState} from \"../context/ChatProvider\"\r\nimport {Box} from \"@chakra-ui/layout\";\r\nimport SideDrawer from \"../commponents/miscellaneous/SideDrawer\"\r\nimport ChatBox from \"../commponents/miscellaneous/ChatBox\"\r\nimport MyChats from \"../commponents/miscellaneous/MyChats\"\r\nimport {ChakraProvider,extendTheme} from \"@chakra-ui/react\"\r\nconst Messenger = ({ socket }) => {\r\n  useEffect(() => {\r\n     document.querySelector(\"body\").removeAttribute(\"class\")\r\n      localStorage.removeItem(\"chakra-ui-color-mode\")\r\n  },)\r\n  const { user} = ChatState()\r\n  const [fetchAgain,setfetchAgain] = useState(false)\r\n  const [theme,setTheme] = useState()\r\nuseEffect(()=>{\r\nconst newtheme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      body: {\r\n  color: \"var(--color-dark)\",\r\n  background: \"var(--color-light)\",\r\n      },\r\n    },\r\n  },\r\n  config: {\r\n    initialColorMode: localStorage.getItem('chakra-ui-color-mode')||\"var(--color-light)\",\r\n  },\r\n});\r\nsetTheme(newtheme)\r\n},[])\r\n\r\nuseEffect(()=>{\r\n  if(socket && user && user.pseudo){\r\n  socket.emit(\"newuser\",user._id)\r\n}\r\n},[socket,user.pseudo,user])\r\n\r\n  return (\r\n    <Helmet title={\"messenger\"}>\r\n    <ChakraProvider  theme={theme}>\r\n    <div style={{width:\"100%\"}} className=\"messanger\">\r\n      {user && <SideDrawer/>}\r\n      <Box\r\n      sx={{display:\"flex\",\r\n      justifyContent:\"space-between\",\r\n      width:\"100%\",\r\n      height:\"91.5vh\",\r\n      background:\"var(--color-light)\",\r\n      border:\"2px solid var(--color-light)\",\r\n      gap:\"0px\"\r\n       }}\r\n      >\r\n        {user && <MyChats fetchAgain={fetchAgain}/>}\r\n        {user && <ChatBox fetchAgain={fetchAgain} setfetchAgain={setfetchAgain} socket={socket}/>}\r\n      </Box>\r\n    </div>\r\n    </ChakraProvider>\r\n    </Helmet>\r\n  );\r\n};\r\nexport default Messenger;\r\n"],"names":["props","document","title","_jsx","className","children","selectedChatCompre","_ref","user","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_jsxs","_Fragment","onClick","IconButton","background","color","_hover","cursor","d","base","icon","Modal","size","isCentered","ModalOverlay","ModalContent","height","ModalHeader","sx","display","justifyContent","fontSize","fontFamily","pseudo","ModalCloseButton","ModalBody","flexDirection","alignItems","Image","borderRadius","boxSize","src","picture","alt","Text","md","email","ModalFooter","logout","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","method","url","concat","SERVER_URL","withCredentials","then","key","window","Cookies","expires","localStorage","removeItem","location","reload","catch","err","console","log","stop","apply","arguments","handleFunction","Box","width","px","py","mb","Avatar","mr","name","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","searchResult","setSearchResult","_useState5","_useState6","loading","setloading","_useState7","_useState8","loadingChat","setloadingChat","_ChatState","ChatState","setSelectedChat","chats","setChats","toast","useToast","accessChat","userId","data","_ref2","find","chat","_id","_toConsumableArray","error","status","duration","isClosable","position","t0","_x","handleSearch","_ref3","_callee2","_context2","abrupt","trim","_ref4","dataFilted","filter","usersearch","_usersearch$followers","followers","includes","padding","Tooltip","hasArrow","label","bg","Button","variant","style","Menu","MenuButton","as","rightIcon","MenuList","ProfileModal","MenuItem","Logout","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","paddingBottom","Input","placeholder","value","onChange","e","target","ChatLoading","map","UserListItem","Spinner","ml","m","gap","fetchAgain","setfetchAgain","fetchMessages","selectedChat","groupName","setgroupName","_useState9","_useState10","renamelaoding","setrenamelaoding","handleRemove","userToremove","groupAdmin","chatId","handleGroup","userToAdd","users","u","_ref5","_x2","hamdleRename","_ref6","_callee3","_context3","chatName","_ref7","description","response","message","_ref8","_callee4","query","_context4","_ref9","_usersearch$following","following","_x3","flexWrap","UserBadgeItem","FormControl","isLoading","colorScheme","slice","messages","ScrollableFeed","index","isSameSender","isLastMessage","sender","marginTop","marginRight","backgroundColor","maxWidth","minWidth","marginLeft","isSameSenderMargin","isSameUser","socket","setMessages","setLoading","newmessage","setnewmessage","istyping","setIstyping","typinginfo","settypinginfo","dispatch","useDispatch","onLineusers","useSelector","state","OnlineUsers","emit","fetchChats","GetAllChat","useEffect","on","messasgeSended","push","_selectedChatCompre","sendMessage","type","incomming","sendMessageButton","createdAt","Date","updatedAt","__v","getTime","sending","pb","isGroupChat","toUpperCase","UpdateGroupChat","whoSelected","isOnline","dateParser","overflowY","alignSelf","h","w","margin","ScrollableChat","onKeyDown","isRequired","mt","setTimeout","p","SingleChat","groupchatName","setgroupchatName","selectedUsers","setselectedUsers","isEmpty","handleSubmit","length","userInfo","loggedUser","setLogedUser","paddind","borderBottom","GroupchatModal","lg","Stack","_chat$latestMessage","_chat$latestMessage2","_chat$latestMessage3","_chat$latestMessage4","AvatarBadge","fontWeight","latestMessage","LongMessage","querySelector","removeAttribute","theme","setTheme","newtheme","extendTheme","styles","global","body","config","initialColorMode","getItem","Helmet","ChakraProvider","SideDrawer","border","MyChats","ChatBox"],"sourceRoot":""}