{"version":3,"file":"static/js/559.992f941a.chunk.js","mappings":"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","sources":["commponents/Helmet/Helmet.jsx","commponents/profile/FollowHandle.js","commponents/single/Single.jsx","pages/Image.jsx"],"sourcesContent":["import React from \"react\";\r\nconst Helmet = (props) => {\r\n  document.title = \"Chat Burundi - \" + props.title;\r\n  return <div className=\"w-100\">{props.children}</div>;\r\n};\r\nexport default Helmet;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UserinfoAction } from \"../../redux/slices/Userinfo\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isEmpty } from \"../Utils\";\r\nimport { SERVER_URL } from \"../../Domain\";\r\nconst FollowHandle = ({ idTofollow, type,socket }) => {\r\n  const [isFollowed, setisFollowed] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state) => state.userInfo);\r\n  const handleFollow = async (FollowerId, idTofollow) => {\r\n    setisFollowed(true);\r\n    await axios({\r\n      method: \"patch\",\r\n      url: `${SERVER_URL}/api/user/follow/${FollowerId}`,\r\n      withCredentials: true,\r\n      data: { idToFollow: idTofollow },\r\n    })\r\n      .then((res) => {\r\n        dispatch(UserinfoAction.Follow(idTofollow));\r\n       //=================notication====================     \r\n axios({\r\n    method: \"patch\",\r\n    url: `${SERVER_URL}/api/post/notification/${idTofollow}`,\r\n    data :{\r\n          notifieId:userData._id,\r\n          notifiePseudo: userData.pseudo,\r\n          notification: \"start following  u\",\r\n          status:\"pending\",\r\n          pictureNotifie:userData.picture\r\n    },\r\n    withCredentials : true\r\n   }).then((res)=>{\r\n    console.log(res)\r\n            socket.emit(\"sendNotification\",{\r\n          senderName:userData._id,\r\n          resverName:idTofollow, \r\n          timeNot: new Date()\r\n        })\r\n   }).catch((err)=>console.log(err))\r\n//======================notication==================================\r\n\r\n\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n  const handleunFollow = async (FollowerId, idToUnFollow) => {\r\n    setisFollowed(false);\r\n    await axios({\r\n      method: \"patch\",\r\n      url: `${SERVER_URL}/api/user/unfollow/${FollowerId}`,\r\n      withCredentials: true,\r\n      data: { idToUnFollow },\r\n    })\r\n      .then((res) => {\r\n        dispatch(UserinfoAction.UnFollow(idTofollow));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (!isEmpty(userData.following)) {\r\n      if (userData.following.includes(idTofollow)) {\r\n        setisFollowed(true);\r\n      } else {\r\n        setisFollowed(false);\r\n      }\r\n    }\r\n  }, [userData, idTofollow]);\r\n  return (\r\n    <>\r\n      {isFollowed === true && (\r\n        <span onClick={() => handleunFollow(userData._id, idTofollow)}>\r\n          {type === \"suggestion\" && (\r\n            <button className=\"btn btn-primary\">UnFollow</button>\r\n          )}\r\n          {type === \"card\" && <i className=\"ri-checkbox-circle-fill\"></i>}\r\n        </span>\r\n      )}\r\n\r\n      {isFollowed === false && idTofollow !== userData._id && (\r\n        <span onClick={() => handleFollow(userData._id, idTofollow)}>\r\n          {type === \"suggestion\" && (\r\n            <button className={\"btn btn-primary\"}>follow</button>\r\n          )}\r\n          {type === \"card\" && <i className=\"ri-checkbox-circle-line\"></i>}\r\n        </span>\r\n      )}\r\n        {isFollowed === false && idTofollow === userData._id && (\r\n        <span>\r\n          {type === \"suggestion\" && (\r\n            <button className={\"btn btn-primary disableButton\"}>follow</button>\r\n          )}\r\n          {type === \"card\" && <i className=\"ri-checkbox-circle-line\"></i>}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FollowHandle;\r\n","import { Avatar, Box, IconButton, InputAdornment, Stack, TextField, Typography } from '@mui/material';\r\nimport { DotsThree, PaperPlane, SmileySad } from 'phosphor-react';\r\nimport { dateParser, isEmpty } from \"../Utils\";\r\nimport React, {useState } from 'react';\r\nimport Helmet from '../Helmet/Helmet';\r\nimport post1 from \"../../images/feed-1.jpg\"\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { useParams } from 'react-router-dom';\r\nimport \"./single.css\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions } from \"../../redux/slices/like\"\r\nimport FollowHandle from \"../profile/FollowHandle\";\r\nconst Single = () => {\r\n    const dispatch = useDispatch()\r\n    const theme = useTheme()\r\n    const params = useParams()\r\n      const posts = useSelector((state) => state.posts);\r\n        const usersData = useSelector((state) => state.getusers);\r\n          const userData = useSelector((state) => state.userInfo);\r\n    console.log(params.id)\r\n    const CommentBody = styled(\"div\")(({ theme }) => ({\r\n        padding: theme.spacing(0, 2),\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        width: \"calc(100% - 50px)\",\r\n        borderRadius: \"10px\",\r\n        minHeight: \"50px\",\r\n        boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        fontSize: \"0.8rem\",\r\n        fontWeight: 600\r\n    }))\r\n\r\n    const StyledInput = styled(TextField)(({ theme }) => ({\r\n        \"& .MuiInputBase-input\": {\r\n            paddingTop: \"12px\",\r\n            paddingBottom: \"12px\"\r\n        }\r\n    }))\r\n\r\n    // const videoHandler = (control) => {\r\n    //     if (control === \"play\") {\r\n    //         videoRef.current.play();\r\n    //         setPlaying(true);\r\n    //         setTimeout(() => {\r\n    //             videoRef.current.pause();\r\n    //             setPlaying(false);\r\n    //         }, 500000);\r\n    //     } else if (control === \"pause\") {\r\n    //         videoRef.current.pause();\r\n    //         setPlaying(false);\r\n    //     }\r\n    // };\r\n    // const forward = () => {\r\n    //     videoRef.current.currentTime += 5\r\n    // }\r\n    // const backward = () => {\r\n    //     videoRef.current.currentTime -= 5\r\n    // }\r\n    //======================================================================================\r\n    const nombre = useSelector(state => state.like.likes)\r\n    const [like, setlike] = useState(false)\r\n    const handleLike = (control) => {\r\n        if (control === \"like\") {\r\n            setlike(true)\r\n            dispatch(actions.increment())\r\n        } else if (control === \"unlike\") {\r\n            setlike(false)\r\n            dispatch(actions.decrement())\r\n        }\r\n    };\r\n    return (\r\n        <Helmet title=\"single post\">\r\n{/*            <Box sx={{ width: \"100%\", background: \"white\", borderRadius: \"10px\" }} p={2}>\r\n                <Stack width=\"100%\" direction={\"row\"} justifyContent=\"space-between\">\r\n                    <Stack direction={\"row\"} spacing={2}>\r\n                        <Avatar />\r\n                        <Stack>\r\n                            <Typography variant=\"subtitle2\">janeiro hurley</Typography>\r\n                            <Typography variant='caption'>12min ago </Typography>\r\n                        </Stack>\r\n                    </Stack>\r\n                    <Stack>\r\n                        <IconButton><DotsThree /></IconButton>\r\n                    </Stack>\r\n                </Stack>\r\n\r\n                <Stack marginTop={\"10px\"} borderRadius=\"10px\" overflow={\"hidden\"}>\r\n\r\n                    <video ref={videoRef}\r\n                        className=\"video\"\r\n                        src={video}\r\n                    ></video>\r\n                    <div className=\"controlsContainer\">\r\n                        <div className=\"controls\">\r\n                            <i className=\"ri-rewind-line\" onClick={backward}></i>\r\n                            {\r\n                                playing ? (<i className=\"ri-pause-line\" onClick={() => videoHandler(\"pause\")}></i>) : (<i className=\"ri-play-line\" onClick={() => videoHandler(\"play\")}></i>)\r\n                            }\r\n\r\n                            <i className=\"ri-speed-line\" onClick={forward} ></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Stack>\r\n                <Stack width=\"100%\" direction={\"row\"} justifyContent=\"space-between\">\r\n                    <Stack direction={\"row\"} spacing={1}>\r\n                        <IconButton>\r\n\r\n                            <i className=\"ri-heart-line\"></i>\r\n                        </IconButton>\r\n                        <IconButton><i className=\"ri-chat-3-line\"></i></IconButton>\r\n                        <IconButton><i className=\"ri-share-line\"></i></IconButton>\r\n                    </Stack>\r\n                    <Stack>\r\n                        <IconButton><i className=\"ri-bookmark-line\"></i></IconButton>\r\n                    </Stack>\r\n                </Stack>\r\n                <Stack width={\"100%\"} marginTop=\"1rem\" spacing={2}>\r\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }} >\r\n                        <Avatar />\r\n                        <CommentBody>Lorem ipsum dolor sit amet consectetur adipisicing elit Praesentium hic nisi dignissimos repellendus quaerat adipisci corporis distinctio et natus a minima minus culpa ad ex voluptatem nihil quidem ab inventore.\r\n\r\n                        </CommentBody>\r\n                    </Box>\r\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }} >\r\n                        <Avatar />\r\n                        <CommentBody>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Praesentium hic nisi dignissimos repellendus quaerat adipisci corporis distinctio et natus a, minima minus culpa ad ex voluptatem nihil quidem ab inventore.\r\n\r\n                        </CommentBody>\r\n                    </Box>\r\n                    <Stack direction='row' alignItems={'center'} spacing={2} height=\"100%\">\r\n                        <Avatar />\r\n                        <StyledInput placeholder='writte a comment....' fullWidth variant='filled' InputProps={{\r\n                            disableUnderline: true,\r\n                            endAdornment: <InputAdornment><IconButton><SmileySad /></IconButton></InputAdornment>\r\n                        }} />\r\n                        <Box sx={{ width: \"50px\", height: \"100%\", background: theme.palette.primary.main, borderRadius: \"10px\", display: \"flex\", justifyContent: \"center\" }} alignItems='center'>\r\n                            <IconButton color=\"white\"><PaperPlane /></IconButton>\r\n                        </Box>\r\n                    </Stack>\r\n                </Stack>\r\n            </Box>*/}\r\n           {\r\n            posts.map((post)=>(\r\n               post._id === params.id &&\r\n                <Box sx={{ width: \"100%\", background: \"white\", borderRadius: \"10px\" }} p={2}>\r\n                <Stack width=\"100%\" direction={\"row\"} justifyContent=\"space-between\">\r\n                    <Stack direction={\"row\"} spacing={2}>\r\n                        <Avatar src={post1}\r\n                  alt=\"ss\" />\r\n                        <Stack>\r\n                            <Typography variant=\"subtitle2\">\r\n                            {!isEmpty(usersData[0]) &&\r\n                      usersData\r\n                        .map((user) => {\r\n                          if (user._id === post.posterId) return user.pseudo;\r\n                          else return null;\r\n                        })\r\n                        .join(\"\")}{\" \"}\r\n                    {post.posterId !== userData._id && (\r\n                      <FollowHandle idTofollow={post.posterId} type={\"card\"} />\r\n                    )}\r\n                    </Typography>\r\n                            <Typography variant='caption'>{dateParser(post.createdAt)} </Typography>\r\n                        </Stack>\r\n                    </Stack>\r\n                    <Stack>\r\n                        <IconButton><DotsThree /></IconButton>\r\n                    </Stack>\r\n                </Stack>\r\n                <Stack marginTop={\"10px\"} borderRadius=\"10px\" overflow={\"hidden\"}>\r\n                 <Typography variant='caption'>{post.message}</Typography>\r\n                </Stack>\r\n                <Stack marginTop={\"10px\"} borderRadius=\"10px\" overflow={\"hidden\"}>\r\n                    {post.picture && <img src={post.picture} alt={\"post-pict\"} />}\r\n                    {post.video && <video src={post.video} alt={\"post-pict\"} />}\r\n                </Stack>\r\n                <Stack width=\"100%\" direction={\"row\"} justifyContent=\"space-between\">\r\n                    <Stack direction={\"row\"} spacing={1}>\r\n                        {\r\n                            like ? <IconButton onClick={() => handleLike(\"unlike\")}><i className=\"ri-heart-fill\" title={`${nombre}`}></i></IconButton> :\r\n                                <IconButton onClick={() => handleLike(\"like\")}><i className=\"ri-heart-line\" title={`${nombre}`}></i></IconButton>\r\n\r\n                        }\r\n                        <IconButton><i className=\"ri-chat-3-line\"></i></IconButton>\r\n                        <IconButton><i className=\"ri-share-line\"></i></IconButton>\r\n                    </Stack>\r\n                    <Stack>\r\n                        <IconButton><i className=\"ri-bookmark-line\"></i></IconButton>\r\n                    </Stack>\r\n                </Stack>\r\n                <Stack width={\"100%\"} marginTop=\"1rem\" spacing={2}>\r\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }} >\r\n                        <Avatar />\r\n                        <CommentBody>Lorem ipsum dolor sit amet consectetur adipisicing elit Praesentium hic nisi dignissimos repellendus quaerat adipisci corporis distinctio et natus a minima minus culpa ad ex voluptatem nihil quidem ab inventore.\r\n\r\n                        </CommentBody>\r\n                    </Box>\r\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }} >\r\n                        <Avatar />\r\n                        <CommentBody>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Praesentium hic nisi dignissimos repellendus quaerat adipisci corporis distinctio et natus a, minima minus culpa ad ex voluptatem nihil quidem ab inventore.\r\n\r\n                        </CommentBody>\r\n                    </Box>\r\n                    <Stack direction='row' alignItems={'center'} spacing={2} height=\"100%\">\r\n                        <Avatar />\r\n                        <StyledInput placeholder='writte a comment....' fullWidth variant='filled' InputProps={{\r\n                            disableUnderline: true,\r\n                            endAdornment: <InputAdornment><IconButton><SmileySad /></IconButton></InputAdornment>\r\n                        }} />\r\n                        <Box sx={{ width: \"50px\", height: \"100%\", background: theme.palette.primary.main, borderRadius: \"10px\", display: \"flex\", justifyContent: \"center\" }} alignItems='center'>\r\n                            <IconButton color=\"white\"><PaperPlane /></IconButton>\r\n                        </Box>\r\n                    </Stack>\r\n                </Stack>\r\n            </Box>\r\n\r\n                ))\r\n           }\r\n        </Helmet >\r\n    )\r\n\r\n}\r\nexport default Single;","import React from \"react\";\r\nimport Helmet from \"../commponents/Helmet/Helmet\";\r\nimport Single from \"../commponents/single/Single\";\r\n\r\n\r\nconst Image = () => {\r\n\r\n  return (\r\n    <Helmet title={\"Image\"}>\r\n      <main>\r\n        <div className=\"container\">\r\n\r\n          {/* ======middle======= */}\r\n          <div className=\"middle\">\r\n            {/* <div className=\"controlsContainer\">\r\n              <div className=\"controls\">\r\n                <img className=\"controlsIcon\" alt=\"\" src=\"/backward-5.svg\" />\r\n                <img className=\"controlsIcon--small\" alt=\"\" src=\"/play.svg\" />\r\n                <img className=\"controlsIcon\" alt=\"\" src=\"/forward-5.svg\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"timecontrols\">\r\n              <p className=\"controlsTime\">1:02</p>\r\n              <div className=\"time_progressbarContainer\">\r\n                <div style={{ width: \"40%\" }} className=\"time_progressBar\"></div>\r\n              </div>\r\n              <p className=\"controlsTime\">2:05</p>\r\n            </div> */}\r\n\r\n            {/* POSTS */}\r\n            <Single />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </Helmet >\r\n  );\r\n};\r\nexport default Image;"],"names":["props","document","title","_jsx","className","children","_ref","idTofollow","type","socket","_useState","useState","_useState2","_slicedToArray","isFollowed","setisFollowed","dispatch","useDispatch","userData","useSelector","state","userInfo","handleFollow","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","FollowerId","wrap","_context","prev","next","axios","method","url","concat","SERVER_URL","withCredentials","data","idToFollow","then","res","UserinfoAction","notifieId","_id","notifiePseudo","pseudo","notification","status","pictureNotifie","picture","console","log","emit","senderName","resverName","timeNot","Date","catch","err","message","stop","_x","_x2","apply","arguments","handleunFollow","_ref3","_callee2","idToUnFollow","_context2","_x3","_x4","useEffect","isEmpty","following","includes","_jsxs","_Fragment","onClick","theme","useTheme","params","useParams","posts","usersData","getusers","id","CommentBody","styled","padding","spacing","pointerEvents","display","alignItems","width","borderRadius","minHeight","boxShadow","fontSize","fontWeight","StyledInput","TextField","paddingTop","paddingBottom","nombre","like","likes","setlike","handleLike","control","actions","Helmet","map","post","Box","sx","background","p","Stack","direction","justifyContent","Avatar","src","post1","alt","Typography","variant","user","posterId","join","FollowHandle","dateParser","createdAt","IconButton","DotsThree","marginTop","overflow","video","height","placeholder","fullWidth","InputProps","disableUnderline","endAdornment","InputAdornment","SmileySad","palette","primary","main","color","PaperPlane","Single"],"sourceRoot":""}